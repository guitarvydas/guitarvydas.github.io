<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://computingsimplicity.neocities.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://computingsimplicity.neocities.org/" rel="alternate" type="text/html" /><updated>2021-07-18T17:57:15-04:00</updated><id>https://computingsimplicity.neocities.org/feed.xml</id><title type="html">Computing Simplicity</title><subtitle>Various thoughts on making programming simpler, and, breaking programming down into several disciplines: Architecture, Engineering, Implementation.  Concurrency is not parallelism and concurrency is not multitasking.</subtitle><entry><title type="html">Software Components - A Language For Distributed Processing</title><link href="https://computingsimplicity.neocities.org/2021/07/18/Software-Components-A-Language-For-Distributed-Processing.html" rel="alternate" type="text/html" title="Software Components - A Language For Distributed Processing" /><published>2021-07-18T00:00:00-04:00</published><updated>2021-07-18T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/18/Software%20Components%20-%20A%20Language%20For%20Distributed%20Processing</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/18/Software-Components-A-Language-For-Distributed-Processing.html">&lt;p&gt;I discuss various issues regarding Software Components.&lt;/p&gt;

&lt;p&gt;I would suggest browsing the table of contents instead of reading this document in a serial fashion.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#old&quot;&gt;Old&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#new&quot;&gt;New&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#optimization&quot;&gt;Optimization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#run-forever&quot;&gt;Run Forever&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#single-thread&quot;&gt;Single Thread&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#message-routing&quot;&gt;Message Routing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#visibility&quot;&gt;Visibility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hierarchy&quot;&gt;Hierarchy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#layering&quot;&gt;Layering&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#recursive-definition--elision&quot;&gt;Recursive Definition, Elision&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#layered-components&quot;&gt;Layered Components&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#leaf-nodes---bottom&quot;&gt;Leaf Nodes - Bottom&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#compound-components---composition&quot;&gt;Compound Components - Composition&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#compound-or-leaf&quot;&gt;Compound or Leaf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#state&quot;&gt;State&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#isolation&quot;&gt;Isolation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#black-boxes&quot;&gt;Black Boxes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lego--like-pluggability&quot;&gt;LEGO®-Like Pluggability&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pluggability-api&quot;&gt;Pluggability API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transport-layer&quot;&gt;Transport layer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tagged-message&quot;&gt;Tagged message&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#referential-transparency&quot;&gt;Referential Transparency&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#micro-services&quot;&gt;Micro-Services&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#looping&quot;&gt;Looping&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dispatcher&quot;&gt;Dispatcher&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#run-to-completion--finish-promptly&quot;&gt;Run To Completion, Finish Promptly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#memory-sharing&quot;&gt;Memory sharing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#time-sharing&quot;&gt;Time sharing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#preemption&quot;&gt;Preemption&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#looping-and-recursion&quot;&gt;Looping and Recursion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#see-also&quot;&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;old&quot;&gt;Old&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;calculators&lt;/li&gt;
  &lt;li&gt;loop/recursion&lt;/li&gt;
  &lt;li&gt;stack&lt;/li&gt;
  &lt;li&gt;synchronous operation&lt;/li&gt;
  &lt;li&gt;always return a result&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;new&quot;&gt;New&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;components&lt;/li&gt;
  &lt;li&gt;ports&lt;/li&gt;
  &lt;li&gt;asynchronous operation&lt;/li&gt;
  &lt;li&gt;can consume inputs and produce nothing&lt;/li&gt;
  &lt;li&gt;Looping/recursion not allowed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;optimization&quot;&gt;Optimization&lt;/h1&gt;

&lt;p&gt;Components should be as small as functions in present-day GPLs&lt;sup id=&quot;fnref:gpl&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:gpl&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h1 id=&quot;run-forever&quot;&gt;Run Forever&lt;/h1&gt;

&lt;p&gt;Components run forever by default.&lt;/p&gt;

&lt;p&gt;(Think &lt;em&gt;servers&lt;/em&gt;).&lt;/p&gt;

&lt;h1 id=&quot;single-thread&quot;&gt;Single Thread&lt;/h1&gt;

&lt;p&gt;Components each have a single thread of control.&lt;/p&gt;

&lt;p&gt;An analogy would be to imagine a network of small computers connected together by thin wires.  Each computer performs some function. The system of connected computers forms an application.&lt;/p&gt;

&lt;p&gt;Components communicate via message passing (&lt;em&gt;send()&lt;/em&gt; messages to the parent, &lt;em&gt;send()&lt;/em&gt; messages to children).&lt;/p&gt;

&lt;h1 id=&quot;message-routing&quot;&gt;Message Routing&lt;/h1&gt;

&lt;p&gt;The &lt;em&gt;parent&lt;/em&gt; of a component decides how to route messages between its children.&lt;/p&gt;

&lt;p&gt;For example, if a component wishes to send a message to its sibling, it sends the message to its parent, then the parent routes the message to the sibling.&lt;/p&gt;

&lt;h1 id=&quot;visibility&quot;&gt;Visibility&lt;/h1&gt;

&lt;p&gt;Components cannot name (“see”) their siblings.&lt;/p&gt;

&lt;p&gt;Most GPLs allow explicit naming of callees.  This is not allowed in a component-based system.&lt;/p&gt;

&lt;h1 id=&quot;hierarchy&quot;&gt;Hierarchy&lt;/h1&gt;

&lt;p&gt;Message passing fails if it is done in a “flat” manner.&lt;/p&gt;

&lt;p&gt;Components must be arranged in a hierarchical manner and messages can only be sent “up” and “down” the hierarchy.&lt;/p&gt;

&lt;p&gt;An analogy would be the scoping rules that fixed the global variable problem.&lt;/p&gt;

&lt;p&gt;Hierarchy is scope.  Scope is hierarchy.&lt;/p&gt;

&lt;p&gt;Analogy: most PCs used flat file systems until UNIX popularized the hierarchical arrangement of file systems.&lt;/p&gt;

&lt;p&gt;Hierarchical components do for software what UNIX file systems did for operating systems.&lt;/p&gt;

&lt;h1 id=&quot;layering&quot;&gt;Layering&lt;/h1&gt;
&lt;p&gt;Components are connected strictly in layers.&lt;/p&gt;

&lt;p&gt;A component can &lt;em&gt;send()&lt;/em&gt; results to its paren.&lt;/p&gt;

&lt;p&gt;A component can &lt;em&gt;send()&lt;/em&gt; commands to its direct children.&lt;/p&gt;

&lt;p&gt;Otherwise, there is no cross-talk - components cannot talk to (nor see) their peers.&lt;/p&gt;

&lt;h1 id=&quot;recursive-definition-elision&quot;&gt;Recursive Definition, Elision&lt;/h1&gt;

&lt;p&gt;Components can be built from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;other components&lt;/li&gt;
  &lt;li&gt;leaf nodes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ports must support fan-out, to enable elision and layering.&lt;/p&gt;

&lt;h1 id=&quot;layered-components&quot;&gt;Layered Components&lt;/h1&gt;
&lt;h2 id=&quot;leaf-nodes---bottom&quot;&gt;Leaf Nodes - Bottom&lt;/h2&gt;
&lt;p&gt;FBP, no inherent structure, +state&lt;br /&gt;
Actors, no inherent structure, +state&lt;br /&gt;
FP and calculators, no inherent structure&lt;br /&gt;
Relational and miniKanren - no inherent structure.&lt;/p&gt;

&lt;p&gt;[N.B it is &lt;em&gt;possible&lt;/em&gt; to organize programs in a hierarchical manner using the above systems, but this is not enforced.]&lt;/p&gt;

&lt;h2 id=&quot;compound-components---composition&quot;&gt;Compound Components - Composition&lt;/h2&gt;

&lt;p&gt;All non-leaf components are composed of other components.&lt;/p&gt;

&lt;p&gt;A component can contain a network of other components (leaf and compound components).&lt;/p&gt;

&lt;h1 id=&quot;compound-or-leaf&quot;&gt;Compound or Leaf&lt;/h1&gt;

&lt;p&gt;A component is either&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a compound component, or,&lt;/li&gt;
  &lt;li&gt;a leaf component&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;state&quot;&gt;State&lt;/h1&gt;

&lt;p&gt;Components can contain &lt;em&gt;state&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;State is not a problem.  Unrestricted use of state is a problem.&lt;/p&gt;

&lt;h1 id=&quot;isolation&quot;&gt;Isolation&lt;/h1&gt;

&lt;p&gt;Components are isolated from one another.&lt;/p&gt;

&lt;p&gt;It is not possible to know how a component is implemented.&lt;/p&gt;

&lt;p&gt;It is not possible to know if a component uses state or doesn’t use state, except by observing its behavior from the outside.&lt;/p&gt;

&lt;p&gt;For example: If a component contains a “memory leak”, this will not affect other components.&lt;/p&gt;

&lt;h1 id=&quot;black-boxes&quot;&gt;Black Boxes&lt;/h1&gt;

&lt;p&gt;Components are black boxes.&lt;/p&gt;

&lt;h1 id=&quot;lego-like-pluggability&quot;&gt;LEGO®-Like Pluggability&lt;/h1&gt;

&lt;p&gt;Components can be plugged together like LEGO® pieces.&lt;/p&gt;

&lt;h1 id=&quot;pluggability-api&quot;&gt;Pluggability API&lt;/h1&gt;

&lt;p&gt;Components support a single API and exactly one type&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;em&gt;tagged message&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that this does not mean that more elaborate typing is impossible.  Components can be joined together in a pipeline of ever-more-detailed types.&lt;/p&gt;

&lt;h1 id=&quot;transport-layer&quot;&gt;Transport layer&lt;/h1&gt;

&lt;p&gt;The single-type API is like a &lt;em&gt;transport layer&lt;/em&gt; in computer networks.&lt;/p&gt;

&lt;p&gt;Messages can be &lt;em&gt;sent()&lt;/em&gt; using the simple API, but their content is defined by higher levels (inside receiving components).&lt;/p&gt;

&lt;p&gt;Note that UNIX® pipelines work this way.  The “transport layer” is a line of text. /bin/*sh can plumb commands together easily. The inner layers of commands define the structure contained in lines, e.g. fields, etc.&lt;/p&gt;

&lt;h1 id=&quot;tagged-message&quot;&gt;Tagged message&lt;/h1&gt;

&lt;p&gt;A message consists of two portions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Tag&lt;/li&gt;
  &lt;li&gt;Data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;em&gt;tag&lt;/em&gt; is (probably) an integer that that further defines a message.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;data&lt;/em&gt; is anything.&lt;/p&gt;

&lt;p&gt;Analogy: &lt;em&gt;tags&lt;/em&gt; are like &lt;em&gt;pins&lt;/em&gt; on hardware ICs.  &lt;em&gt;Data&lt;/em&gt; is like the signal received/sent by hardware ICs.&lt;/p&gt;

&lt;h1 id=&quot;referential-transparency&quot;&gt;Referential Transparency&lt;/h1&gt;

&lt;p&gt;Since components are black boxes, they can be substituted only if their pins match the component-to-be-replaced.&lt;/p&gt;

&lt;p&gt;In hardware, this is called &lt;em&gt;pin-compatibility&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;micro-services&quot;&gt;Micro-Services&lt;/h1&gt;

&lt;p&gt;Components can act like servers.&lt;/p&gt;

&lt;h1 id=&quot;looping&quot;&gt;Looping&lt;/h1&gt;

&lt;p&gt;Components can send messages to themselves.&lt;/p&gt;

&lt;p&gt;This allows creation of loops, but is not built into the underlying programming language.&lt;/p&gt;

&lt;p&gt;[&lt;em&gt;Existing languages can be modified so that their compilers break each iteration of a loop.&lt;/em&gt;]&lt;/p&gt;

&lt;h1 id=&quot;dispatcher&quot;&gt;Dispatcher&lt;/h1&gt;

&lt;p&gt;Only the &lt;em&gt;Dispatcher&lt;/em&gt; can invoke components.&lt;/p&gt;

&lt;p&gt;Components do not have access to &lt;em&gt;call/return&lt;/em&gt;[^inner call] at the inter-component level.&lt;/p&gt;

&lt;p&gt;Components cannot directly affect dispatching of other components.&lt;/p&gt;

&lt;h1 id=&quot;run-to-completion-finish-promptly&quot;&gt;Run To Completion, Finish Promptly&lt;/h1&gt;

&lt;p&gt;Components must run to completion.&lt;/p&gt;

&lt;p&gt;Components must finish “quickly”.&lt;/p&gt;

&lt;p&gt;This is similar to the use of mutual multitasking.&lt;/p&gt;

&lt;p&gt;Mutual multitasking was discredited when it was used for building operating systems.&lt;/p&gt;

&lt;p&gt;Operating systems are apps with a special purpose.&lt;/p&gt;

&lt;p&gt;Most apps don’t present the set of problems faced by operating system apps (e.g. time-sharing and memory-sharing are needed by operating systems, but not needed by most apps).&lt;/p&gt;

&lt;p&gt;Preemptive multitasking is considered to be the exception, not the rule.&lt;/p&gt;

&lt;h1 id=&quot;memory-sharing&quot;&gt;Memory sharing&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Memory Sharing&lt;/em&gt; is a technique driven by early versions of computers, where memory was in short supply and expensive.&lt;/p&gt;

&lt;p&gt;It has become apparent that memory sharing is loaded with difficulties.&lt;/p&gt;

&lt;p&gt;Memory sharing, and &lt;em&gt;mutable state&lt;/em&gt;, should only be used in situations that require it.&lt;/p&gt;

&lt;p&gt;At present, most Operating Systems supply memory sharing primitives to every application, regardless of whether the applications need to use memory sharing.&lt;/p&gt;

&lt;p&gt;I suggest that Operating Systems need to be fundamentally redesigned (or, better, discarded completely).&lt;/p&gt;

&lt;h1 id=&quot;time-sharing&quot;&gt;Time sharing&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Time Sharing&lt;/em&gt; is a technique driven by early versions of computers, where CPU power was in short supply and expensive.&lt;/p&gt;

&lt;p&gt;It has become apparent that time sharing is loaded with difficulties.&lt;/p&gt;

&lt;p&gt;Time sharing should only be used in situations that require it.&lt;/p&gt;

&lt;p&gt;At present, most Operating Systems supply time sharing primitives to every application, regardless of whether the applications need to use time sharing.&lt;/p&gt;

&lt;p&gt;I suggest that Operating Systems need to be fundamentally redesigned (or, better, discarded completely).&lt;/p&gt;

&lt;h1 id=&quot;preemption&quot;&gt;Preemption&lt;/h1&gt;

&lt;p&gt;Preemption is a epicycle added to operating systems.  Preemption is a brute-force technique that yanks the CPU out from under an application.&lt;/p&gt;

&lt;p&gt;Preemption was added to operating systems because long running loops were thought to be essential.&lt;/p&gt;

&lt;p&gt;Removing long-running loops (and deep recursion) would obviate the need for preemption.  Message-based systems could create loops by sending messages to themselves.&lt;/p&gt;

&lt;p&gt;Preemption is built into most operating systems and becomes part of every application that uses the operating system(s).&lt;/p&gt;

&lt;p&gt;Full preemption causes its own set of problems, commonly known as &lt;em&gt;accidental complexity&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Full preemption is required by only a few applications, e.g. operating systems (Linux, Windows, MacOSX, etc.)&lt;/p&gt;

&lt;p&gt;Early on, mutual multitasking was tried as an alternative to full preemption.  This technique was discredited for the wrong reasons - it was used to implement operating systems (the only kind of app that requires preemption) and failed to provide isolation between applications running under those operating systems.  Those applications did not “play well together”, since they used long-running loops&lt;/p&gt;

&lt;p&gt;Looping (and deep recursion) is an outdated concept.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Infinite loops&lt;/em&gt; are application bugs like any other bug.&lt;/p&gt;

&lt;p&gt;If apps were bug-free and did not contain long-running loops (or deep recursion), operating systems would not be needed.&lt;/p&gt;

&lt;p&gt;One of the causes of needing loops in programs is that apps are treated as functions, instead of as a series of (small) steps.&lt;/p&gt;

&lt;p&gt;We witness the demise of loops with the rise of distributed computing, e.g. internet, blockchain, etc.  The main contribution of the seminal &lt;a href=&quot;http://pmg.csail.mit.edu/papers/osdi99.pdf&quot;&gt;pBFT&lt;/a&gt; paper was to unroll functions into a series of steps that could be executed in a distributed network of computers&lt;sup id=&quot;fnref:fig1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:fig1&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h1 id=&quot;looping-and-recursion&quot;&gt;Looping and Recursion&lt;/h1&gt;

&lt;p&gt;Many of the emerging GPLs do not provide Loops as an explicit concept. For example, GPLs based on FP and Relational concepts. In general, these kinds of GPLs provide Universal Quantification (forall), but do not provide explicit looping.&lt;/p&gt;

&lt;p&gt;Looping and recursion are low-level implementation details.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io/2020/12/25/The-ALGOL-Bottleneck.html&quot;&gt;The Algol Bottleneck&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2020/12/09/Type-Stacks.html&quot;&gt;Type Stacks&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:gpl&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;GPL means General purpose Programming Language. &lt;a href=&quot;#fnref:gpl&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fig1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Note that the pBFT technique was described in Fig. 1 of the paper as a diagram instead of as a function. &lt;a href=&quot;#fnref:fig1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">I discuss various issues regarding Software Components.</summary></entry><entry><title type="html">Readability</title><link href="https://computingsimplicity.neocities.org/2021/07/17/Readability.html" rel="alternate" type="text/html" title="Readability" /><published>2021-07-17T00:00:00-04:00</published><updated>2021-07-17T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/17/Readability</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/17/Readability.html">&lt;p&gt;Programming language Readability is of, at least, two layers:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Human Readability&lt;/li&gt;
  &lt;li&gt;Machine Readability.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To date, programming language designers have been emphasizing human readable syntaxes.&lt;/p&gt;

&lt;p&gt;To date, we think of programming to consist of only 2 layers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;machine code (assembler, etc.)&lt;/li&gt;
  &lt;li&gt;human-readable PLs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Machine readable languages enable automatic manipulation of source code.&lt;/p&gt;

&lt;p&gt;Machine readable languages enable layering, e.g. allowing more than 2 layers for software designs.&lt;/p&gt;

&lt;p&gt;Human-readable languages can be automated using parsers. (REGEXP is a subset of parsing).&lt;/p&gt;

&lt;p&gt;The belief that only 2 layers are possible, leads to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the belief that PLs can be designed and implemented by only a select few (interpreter and compiler people)&lt;/li&gt;
  &lt;li&gt;the belief that PL technology is split into only 2 parts - compile-time and run-time&lt;/li&gt;
  &lt;li&gt;mixing implementation details with DI (Architectural) details&lt;/li&gt;
  &lt;li&gt;an uneven blend of DI vs. Implementation details in a language (depends on the language designer). For example, data abstraction is a DI concern, whereas low-level operations, like “+”, are implementation details.&lt;sup id=&quot;fnref:user&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:user&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;human-readable&quot;&gt;Human Readable&lt;/h1&gt;
&lt;p&gt;Basically, any language that “has syntax” is meant for human consumption.&lt;/p&gt;

&lt;p&gt;Syntax is a way to error-check programs written by humans.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pascal&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;HTML&lt;/li&gt;
  &lt;li&gt;spreadsheets&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;machine-readable&quot;&gt;Machine Readable&lt;/h1&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;assembler&lt;/li&gt;
  &lt;li&gt;bash, *sh&lt;/li&gt;
  &lt;li&gt;CL (Common Lisp)&lt;/li&gt;
  &lt;li&gt;JS (JS is schizophrenic - it contains syntax, but also contains machine-level concepts)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:user&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Note that user-defined data structures are actually Implementation details. &lt;a href=&quot;#fnref:user&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Programming language Readability is of, at least, two layers: Human Readability Machine Readability.</summary></entry><entry><title type="html">Data Design vs Control Flow Design</title><link href="https://computingsimplicity.neocities.org/2021/07/17/Data-Design-vs-Control-Flow-Design.html" rel="alternate" type="text/html" title="Data Design vs Control Flow Design" /><published>2021-07-17T00:00:00-04:00</published><updated>2021-07-17T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/17/Data%20Design%20vs%20Control%20Flow%20Design</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/17/Data-Design-vs-Control-Flow-Design.html">&lt;p&gt;Programming consists of, at least, 2 aspects:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;data design&lt;/li&gt;
  &lt;li&gt;control flow design.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A PL for data design should contain no provisions for control flow.&lt;/p&gt;

&lt;p&gt;A PL for control flow design should contain no provisions for data design, i.e. such languages should be data-less.&lt;sup id=&quot;fnref:ssl&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:ssl&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;fnref:handles&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:handles&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ssl&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;See S/SL in References, for an example of a dataless language. &lt;a href=&quot;#fnref:ssl&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:handles&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Handles to data have been used in various contexts. Handles allow moving data around, but do not allow definition of data structures. &lt;a href=&quot;#fnref:handles&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Programming consists of, at least, 2 aspects: data design control flow design.</summary></entry><entry><title type="html">Software Creativity</title><link href="https://computingsimplicity.neocities.org/2021/07/17/Software-Creativity.html" rel="alternate" type="text/html" title="Software Creativity" /><published>2021-07-17T00:00:00-04:00</published><updated>2021-07-17T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/17/Software%20Creativity</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/17/Software-Creativity.html">&lt;p&gt;If all I’ve got are berries and sticks, then all I can draw are cave-paintings before I run out of patience.&lt;/p&gt;

&lt;p&gt;If I’ve got oil paints, then maybe I can paint things in more detail before my patience runs out.&lt;/p&gt;

&lt;p&gt;The tipping point for expressing creativity is to make it easy and rapid to do so.&lt;/p&gt;

&lt;p&gt;If it takes several years to iterate Python, then I can only build certain kinds of programs.&lt;/p&gt;

&lt;p&gt;If I can whip up SCN’s in an afternoon, then I might do things differently and build more interesting programs.&lt;/p&gt;

&lt;h1 id=&quot;implementation&quot;&gt;Implementation&lt;/h1&gt;

&lt;p&gt;Current PLs are geared for Implementation.&lt;/p&gt;

&lt;p&gt;Any PL that encourages a programmer to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; or to create user-defined data structures, encourages an Implementation mind-set.&lt;/p&gt;

&lt;h1 id=&quot;di--architecture&quot;&gt;DI &amp;amp; Architecture&lt;/h1&gt;

&lt;p&gt;Any PL that encourages the use of only one paradigm, e.g. only Objects, only Functions, only Synchronous operation, etc., puts programming creativity in a box.&lt;/p&gt;

&lt;p&gt;DI’ers should be free to choose any representation for a given problem and solution.&lt;/p&gt;

&lt;p&gt;DI’ers should be free to use multiple representations in one project.&lt;/p&gt;

&lt;p&gt;A DI’er should choose from a gamut of possible PLs.&lt;/p&gt;

&lt;h2 id=&quot;dataless-languages&quot;&gt;Dataless Languages&lt;/h2&gt;

&lt;p&gt;A &lt;em&gt;dataless&lt;/em&gt; language expresses only control flow and does not express &lt;em&gt;how&lt;/em&gt; to construct data structures that it uses.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;dataless&lt;/em&gt; language can move data around using opaque handles to the data and, it can pass data to functions (and procedures), but it cannot “look inside” the data nor express how the data is constructed.&lt;/p&gt;

&lt;h2 id=&quot;dataful-languages&quot;&gt;Dataful Languages&lt;/h2&gt;

&lt;p&gt;A &lt;em&gt;dataful&lt;/em&gt; language expresses how to construct and name data, but does not provide control-flow operations.&lt;/p&gt;

&lt;p&gt;Examples of data construction can be seen in just about every PL in the form of user-defined objects and classes.&lt;/p&gt;

&lt;p&gt;For example, OOP languages encourage the definition classes of objects, and legal operations on such objects.&lt;/p&gt;

&lt;h2 id=&quot;phases-situations&quot;&gt;Phases, Situations&lt;/h2&gt;

&lt;p&gt;Most PLs describe data in a way that makes all operations available at all times.&lt;/p&gt;

&lt;p&gt;Compiler passes and UNIX pipelines describe operations that can only happen at given times.&lt;/p&gt;

&lt;p&gt;For example, compilers might break down into several passes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Scanning (lexing)&lt;/li&gt;
  &lt;li&gt;Parsing (checking syntax)&lt;/li&gt;
  &lt;li&gt;Semantic analysis (checking meaning)&lt;/li&gt;
  &lt;li&gt;Allocation (decisions about &lt;em&gt;where&lt;/em&gt; each datum is located (e.g. on the stack, in a heap, etc.))&lt;/li&gt;
  &lt;li&gt;Code emission (transpilation of the program into another format).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Programmers choose &lt;em&gt;arbitrary&lt;/em&gt; boundaries for time-related operations, e.g.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;compile time&lt;/li&gt;
  &lt;li&gt;run time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As shown above, (1) compile time, can be broken down into 5 components.&lt;/p&gt;

&lt;p&gt;I believe that time-related phasing should not be restricted only to compiler-building.&lt;/p&gt;

&lt;h2 id=&quot;gluing-languages-together&quot;&gt;Gluing Languages Together&lt;/h2&gt;

&lt;p&gt;To be useful, a set of PLs for DI must be glued together to form a solution to a problem.&lt;/p&gt;

&lt;p&gt;UNIX pipelines encouraged the use of multiple parts, programmed in different languages, to be glued together into a single solution.&lt;/p&gt;

&lt;p&gt;Today’s PLs expect one to create all parts using a single language and libraries.  FFI has become a method for breaking out of the single-language paradigm, albeit cumbersome. Docker is a partial solution to the multi-language problem. DLLs are yet another partial solution.&lt;/p&gt;

&lt;h2 id=&quot;sychronous-vs-asynchronous-design&quot;&gt;Sychronous vs Asynchronous Design&lt;/h2&gt;
&lt;p&gt;Breaking free of synchronous design is an essential step for easily gluing languages together into seamless solutions.&lt;/p&gt;

&lt;h2 id=&quot;lego-blocks&quot;&gt;LEGO Blocks&lt;/h2&gt;
&lt;p&gt;DI needs to use software units that plug together like LEGO blocks.&lt;/p&gt;

&lt;p&gt;Note that LEGO blocks all have the same API and that that API is simple - round posts that fit all other blocks.&lt;/p&gt;

&lt;p&gt;Programmers have tried to use libraries as LEGO blocks, but, the API of libraries is too complicated and varied.&lt;/p&gt;

&lt;p&gt;UNIX pipelines employed a simple API - lines of text. All interpretation of the data was performed by the components themselves.&lt;/p&gt;

&lt;p&gt;It is possible to &lt;em&gt;stack&lt;/em&gt; types together, much like in a pipeline, to build up detailed type systems using only simple APIs.&lt;/p&gt;

&lt;p&gt;A simple API might be the &lt;em&gt;message&lt;/em&gt; - an integer &lt;em&gt;tag&lt;/em&gt; and a chunk of &lt;em&gt;data&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;software-atoms&quot;&gt;Software Atoms&lt;/h2&gt;

&lt;p&gt;Software is composed of &lt;em&gt;atoms&lt;/em&gt;.  Atoms can be composed into various other forms (&lt;em&gt;molecules&lt;/em&gt; to continue the analogy).&lt;/p&gt;

&lt;p&gt;Assembler is a language / API of &lt;em&gt;atoms&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Lisp is an HLL (High Level Language) that most closely consists of software atoms.&lt;/p&gt;

&lt;p&gt;Lisp tends to have just about every kind of programming feature available.  Many other languages have started out as &lt;em&gt;molecules&lt;/em&gt; based on Lisp.&lt;/p&gt;

&lt;p&gt;Lisp is often thought to be less human-readable than other PLs. Machine-readability is more important than human-readability for constructing phrases of atoms.&lt;/p&gt;

&lt;p&gt;At present, I believe that &lt;em&gt;atoms&lt;/em&gt; consist of 3 aspects:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;relation&lt;/li&gt;
  &lt;li&gt;subject&lt;/li&gt;
  &lt;li&gt;object.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Relational languages and XML most closely fit this model of &lt;em&gt;atoms&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Note that, to extend atomic languages, one can provide syntax &lt;em&gt;skins&lt;/em&gt; and &lt;em&gt;layers&lt;/em&gt; instead of adding features to the atomic languages themselves.&lt;/p&gt;

&lt;p&gt;No &lt;em&gt;one&lt;/em&gt; syntax will fit &lt;em&gt;all&lt;/em&gt; problems.&lt;/p&gt;

&lt;p&gt;A notable example is the use of threading libraries with otherwise synchronous PLs.  Concurrency is fundamentally simple, except when expressed in synchronous form and when &lt;em&gt;all&lt;/em&gt; solutions use time-sharing and memory-sharing, even when not needed.&lt;/p&gt;

&lt;h2 id=&quot;peg-parsing&quot;&gt;PEG Parsing&lt;/h2&gt;

&lt;p&gt;PEG technology augments the ability create light-weight parsers.&lt;/p&gt;

&lt;p&gt;Ohm-JS augments the ability to use PEG because it separates grammar from semantics (the rest of the code). Of course, it is &lt;em&gt;possible&lt;/em&gt; to write PEG pre-filters for other PEG technologies to accomplish the same effect as Ohm-JS, but this hasn’t been done yet.&lt;/p&gt;

&lt;h2 id=&quot;machine-readable-syntaxes&quot;&gt;Machine Readable Syntaxes&lt;/h2&gt;

&lt;p&gt;Programmers have concentrated on building “bigger and better” PLs with human-readable syntax.&lt;/p&gt;

&lt;p&gt;To enable rapid turnaround for Software Creativity, automation - programs that write programs - can be used.&lt;/p&gt;

&lt;p&gt;This requires an emphasis on &lt;em&gt;machine readability&lt;/em&gt; instead of human-readability.&lt;/p&gt;

&lt;h2 id=&quot;diagrams-as-syntax&quot;&gt;Diagrams as Syntax&lt;/h2&gt;

&lt;p&gt;Currently, PL syntax is limited to text, mostly in fixed fonts.&lt;/p&gt;

&lt;p&gt;Creativity can be enhanced by enabling diagram-based syntax (DaS).&lt;/p&gt;

&lt;p&gt;Note that diagrams-based syntax is not based on pixels and so-called &lt;em&gt;visual programming&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Diagram-based syntax needs only a few primitives (already available in SVG as primitives):&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;rectangles&lt;/li&gt;
  &lt;li&gt;ellipses&lt;/li&gt;
  &lt;li&gt;lines&lt;/li&gt;
  &lt;li&gt;text.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;DaS (Diagrams as Syntax) differs from text-based syntax in small ways, notably, the use of (x,y) coordinates instead of (line,offset) coordinates and the fact that cells can overlap (whereas character cells cannot overlap in most text-based PLs).&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Transpilation of Racket PEG Code&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;</content><author><name></name></author><summary type="html">If all I’ve got are berries and sticks, then all I can draw are cave-paintings before I run out of patience.</summary></entry><entry><title type="html">Software Brainstorming</title><link href="https://computingsimplicity.neocities.org/2021/07/17/Software-Brainstorming.html" rel="alternate" type="text/html" title="Software Brainstorming" /><published>2021-07-17T00:00:00-04:00</published><updated>2021-07-17T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/17/Software%20Brainstorming</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/17/Software-Brainstorming.html">&lt;p&gt;In creative endeavours, the techniques of &lt;em&gt;brainstorming&lt;/em&gt; are used.&lt;/p&gt;

&lt;p&gt;In software development (which is a creative endeavour), &lt;em&gt;brainstorming&lt;/em&gt; can be facilitated by:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Scapple&lt;/li&gt;
  &lt;li&gt;B-Rhymes.com and Rhymezone.com&lt;/li&gt;
  &lt;li&gt;diagrams&lt;/li&gt;
  &lt;li&gt;markdown / org-mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;scapple&quot;&gt;Scapple&lt;/h1&gt;
&lt;p&gt;Scapple is a product that appears to be mind-mapping software, at first glance.  The UX of Scapple offers significantly less friction than that of most mind-mappers. Friction inhibits creativity.&lt;/p&gt;

&lt;h1 id=&quot;rhyming-dictionaries&quot;&gt;Rhyming Dictionaries&lt;/h1&gt;
&lt;p&gt;B-Rhymes and Rhymezone are websites that provide rhyming dictionaries for English words. At first glance, one would conclude that rhymes have no place in software development, but,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I argue that “finding the right word” is vital to expressing ideas, even software ideas.&lt;/li&gt;
  &lt;li&gt;Rhyming dictionaries can be use as seeds for &lt;em&gt;brainstorming&lt;/em&gt;&lt;sup id=&quot;fnref:pp&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:pp&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, instead of just being used to find rhyming words.  Many songwriting workshops discuss &lt;em&gt;brainstorming&lt;/em&gt; techniques, but tend to overlook the usefulness of rhyming dictionaries in this regard.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;diagrams&quot;&gt;Diagrams&lt;/h1&gt;

&lt;p&gt;Some of the greatest advances in software development have come about due to containment.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Structured Programming&lt;/li&gt;
  &lt;li&gt;Global Variables&lt;/li&gt;
  &lt;li&gt;OOP&lt;/li&gt;
  &lt;li&gt;Functional Programming&lt;/li&gt;
  &lt;li&gt;UNIX filesystem&lt;/li&gt;
  &lt;li&gt;Statecharts&lt;/li&gt;
  &lt;li&gt;HTML&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Diagrams can show containment more readily than text. For example, A contains B in the diagram below.&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; version=&quot;1.1&quot; width=&quot;181px&quot; height=&quot;131px&quot; viewBox=&quot;-0.5 -0.5 181 131&quot; content=&quot;&amp;lt;mxfile host=&amp;quot;Electron&amp;quot; modified=&amp;quot;2021-07-18T12:30:48.375Z&amp;quot; agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.4.2 Chrome/78.0.3904.130 Electron/7.1.4 Safari/537.36&amp;quot; etag=&amp;quot;Fg8qtK6DoUMAJpKL2f47&amp;quot; version=&amp;quot;12.4.2&amp;quot; type=&amp;quot;device&amp;quot; pages=&amp;quot;4&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;Xs2AaU-XmH5T2DiFEkDr&amp;quot; name=&amp;quot;containment&amp;quot;&amp;gt;rZRNc4MgEEB/jcfOiEwzuZrUND00PeTQXqlshSmKQzBqf32xrh+MyUwz7Ul4uyzw2DGg27x5NKwUz5qDCqKQNwF9CKKIkHDlPh1pe7IeQGYkx6QJHOUXIAyRVpLDyUu0WisrSx+muiggtR5jxujaT/vQyt+1ZBkswDFlaklfJbdivFc4BfYgM4Fbr+8xkLMhGcFJMK7rGaJJQLdGa9uP8mYLqpM3eOnX7a5Ex4MZKOxvFrzs2fthI9528jM57RNTx0+HO6xyZqrCC8d4WtsOCoyuCg5dFRLQTS2khWPJ0i5au0d3TNhcYfgMxkqnL1YyKxyzukvAXVwMmqvHJ6MU102gc7CmdSnN0Dj9itaf1rNHGZiYvQehCBk2QjZWnly5Aeq6QV20ULf5m7p/kESIb4lEFzRFFzStbrfkplPz/sRmvwCafAM=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;OP0lKuruEva2PuSopIhZ&amp;quot; name=&amp;quot;anti-containment&amp;quot;&amp;gt;tZTfT4MwEID/Gh5NgMqGj9uc4oOJyTQ+N/RGmxSKXRngX2+R40fFxCzqE+13xzX3XcEju7y517Tkj4qB9EKfNR659cIwCPyVfXSk7Uk8gEwLhkkTOIh3QOgjrQSDk5NolJJGlC5MVVFAahxGtVa1m3ZU0j21pBkswCGlcklfBTN87MufAgmIjOPRcYSBnA7JCE6cMlXPENl7ZKeVMv0qb3YgO3mDl5e0zfZJcl6T+C1+WK2fts/RVV/s7pJXxhY0FOZvS1/3pc9UVuhrg82adjCoVVUw6KoEHtnWXBg4lDTtorW9M5Zxk0sMn0EbYe1vpMgKy4zqEvAUG4Pmy1h+6CkYRdsbCioHo1v7Hla5wdG07raeDTpGxmczDghCipcrGytPAu0CHV7gM1r43P7O53+ZC31XXRBGS3fhN+5Wl6uz2+kr+YzN/jVk/wE=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;wdE6fbhklp7xuaH_Btzq&amp;quot; name=&amp;quot;connections&amp;quot;&amp;gt;7VffU5tAEP5r8mgmcEDw0USrtXY6Yx7Uxwu3wLUHmzkuCelf3yU5AkhGqzatM/aBCfvt7cLutz/CgE2z8lLzRfoVBaiBOxLlgJ0PXNdxRgH9VMhmh4Q1kGgp7KEGmMmfYMGRRZdSQNE5aBCVkYsuGGGeQ2Q6GNca191jMaruUxc8gR4wi7jqo3dSmHQf16hRXIFMUvvo0LeKjNeHLVCkXOC6BbGLAZtqRLO7y8opqCp5dV6yZTa9Of3MzFrObv0zXF3z25Ods08vMdmHoCE3r3Z9MpuP8ptLpooCH65jz8y+JNZktOJqafN1RVZ4h5rSvIvabOpUalzmAip3zoBN1qk0MFvwqNKuqXgIS02mrBpJI01VNJRQNuFKJjkJEYUAmoAVaCOJpjOrMFg5sK9DOigf8fdM8M6eESplwAyM3pCd9RLYQG0Re1ZcNxXBaixtFYNTVzG3VZjsPTeZphub7Bck3uklPtEA5m05F7xI92dfSkAmhaieOomlUlNUqLdvwOIwgigivDAaf0BLMw99b+v7WKw53njo+h3mwj5zTnDaZ475RyLO7VEEggaOFVGbFBPMubpo0ElDYpWt5swNVkW/Zes7GLOx05MvDXaJhVKa+9b9Q+Vq6FvpvLSet8KmFnIK974ttKwqsTHbSrXdLr4qqFdQSYnBpY7giQQyuwS4TsA8cc4/XBoaFDdy1X25P84y67XnkPxIupw+/0rRMoPn25MXi92Gi2VZVcPjThM+hMI71Ku91gvdOQsC0lDHmW/dTj9WN1IzPupFtwbac/TAGGXHmqLeQZrwuDTFcexuB+LzNIlgHvh/mSYWBu+OJ/8gTxFd7odvK4c5w/F7Iyz4v+XetuXGv7nlvH+55cZPtuXHHqPuadj773nEtiSx+ZLc6lrf4+ziFw==&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;oirbKWTgE0n337vZY3ht&amp;quot; name=&amp;quot;spaghetti&amp;quot;&amp;gt;7Vffb5swEP5r8rgIcCDkcUm7VdW6TYq0tI8OPsCbwZHjJGR//c5gAoSoXdZmndQ9oHDfnQ/uvvsRBmSWFR8VXaV3koEYeA4rBuRq4Hmu6wT4Y5B9hYQ1kCjOrFEDzPlPsKBj0Q1nsO4YaimF5qsuGMk8h0h3MKqU3HXNYim6T13RBHrAPKKijy440+khLqdR3ABPUvvo0LeKjNbGFlinlMldCyLXAzJTUurqLitmIEzy6rwsbu9uvk0W2UKJ6OvnnM6zze27ytmHc44cQlCQ65d17VWut1RsbL5u8JRcSIVprqLW+zqVSm5yBsadOyDTXco1zFc0MtodFg9iqc6EVUvUcG2KBhNKplTwJEchwhBAIbAFpTnS9N4qtDQO7OugDooj/p4I3j0wgqUMMgOt9njOegksh7aIR1bcNRVBaixtFYNbVzG1VZgcPDeZxhub7DMST3qJTxSAfl7OGV2nB9tzCcg4Y+ap05gLMZNCqvINSBxGEEWIr7WSP6ClWYb+qPR9Kdbc0WTo+R3mPKdPnRtM+tQR/0LMjXocAcOJY0WpdCoTmVNx3aDThkWTrsbmkzRVX9L1HbTe2/FJN1p2mYWC6/vW/YNxNfStdFVYz6Wwr4Ucw71vC61TRmyOlVJ9rorPBPUHXGJi5EZF8IidJUZTlcBj/sana0OBoJpvuy/34iz7vf4coh+Ol9vnXwjcZvB0f9L1qlpxMS9MNRy3GvMhZKNTzdrrvdBbkiBADbac/tJt9Uu142g87DZj6NVAe5CemKPkUmM0OEmTvCxNcRx75UR8miYWLAP/L9NEwuCf42l8kqcIL+/Nt5VLyHB8vOVenbHw/5p73pqb/OaaC15zzU0e7cs3Pkcdp//v84J9iWLzMVnqWp/k5PoX&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;defs /&gt;&lt;g&gt;&lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;180&quot; height=&quot;130&quot; rx=&quot;19.5&quot; ry=&quot;19.5&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(85.5,7.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;8&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 10px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;A&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;4&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;A&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&quot;30&quot; y=&quot;40&quot; width=&quot;120&quot; height=&quot;60&quot; rx=&quot;9&quot; ry=&quot;9&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(85.5,63.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;8&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 10px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;B&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;4&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;B&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;

&lt;p&gt;Diagrams can show non-containment more readily than text. For example, B is not fully contained in A.&lt;/p&gt;

&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; version=&quot;1.1&quot; width=&quot;231px&quot; height=&quot;131px&quot; viewBox=&quot;-0.5 -0.5 231 131&quot; content=&quot;&amp;lt;mxfile host=&amp;quot;Electron&amp;quot; modified=&amp;quot;2021-07-18T12:31:02.077Z&amp;quot; agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.4.2 Chrome/78.0.3904.130 Electron/7.1.4 Safari/537.36&amp;quot; etag=&amp;quot;slr0ukSGl4wl7wt3kjAy&amp;quot; version=&amp;quot;12.4.2&amp;quot; type=&amp;quot;device&amp;quot; pages=&amp;quot;4&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;Xs2AaU-XmH5T2DiFEkDr&amp;quot; name=&amp;quot;containment&amp;quot;&amp;gt;rZRNc4MgEEB/jcfOiEwzuZrUND00PeTQXqlshSmKQzBqf32xrh+MyUwz7Ul4uyzw2DGg27x5NKwUz5qDCqKQNwF9CKKIkHDlPh1pe7IeQGYkx6QJHOUXIAyRVpLDyUu0WisrSx+muiggtR5jxujaT/vQyt+1ZBkswDFlaklfJbdivFc4BfYgM4Fbr+8xkLMhGcFJMK7rGaJJQLdGa9uP8mYLqpM3eOnX7a5Ex4MZKOxvFrzs2fthI9528jM57RNTx0+HO6xyZqrCC8d4WtsOCoyuCg5dFRLQTS2khWPJ0i5au0d3TNhcYfgMxkqnL1YyKxyzukvAXVwMmqvHJ6MU102gc7CmdSnN0Dj9itaf1rNHGZiYvQehCBk2QjZWnly5Aeq6QV20ULf5m7p/kESIb4lEFzRFFzStbrfkplPz/sRmvwCafAM=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;OP0lKuruEva2PuSopIhZ&amp;quot; name=&amp;quot;anti-containment&amp;quot;&amp;gt;tZTfT4MwEID/Gh5NgMqGj9uc4oOJyTQ+N/RGmxSKXRngX2+R40fFxCzqE+13xzX3XcEju7y517Tkj4qB9EKfNR659cIwCPyVfXSk7Uk8gEwLhkkTOIh3QOgjrQSDk5NolJJGlC5MVVFAahxGtVa1m3ZU0j21pBkswCGlcklfBTN87MufAgmIjOPRcYSBnA7JCE6cMlXPENl7ZKeVMv0qb3YgO3mDl5e0zfZJcl6T+C1+WK2fts/RVV/s7pJXxhY0FOZvS1/3pc9UVuhrg82adjCoVVUw6KoEHtnWXBg4lDTtorW9M5Zxk0sMn0EbYe1vpMgKy4zqEvAUG4Pmy1h+6CkYRdsbCioHo1v7Hla5wdG07raeDTpGxmczDghCipcrGytPAu0CHV7gM1r43P7O53+ZC31XXRBGS3fhN+5Wl6uz2+kr+YzN/jVk/wE=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;wdE6fbhklp7xuaH_Btzq&amp;quot; name=&amp;quot;connections&amp;quot;&amp;gt;7VffU5tAEP5r8mgmcEDw0USrtXY6Yx7Uxwu3wLUHmzkuCelf3yU5AkhGqzatM/aBCfvt7cLutz/CgE2z8lLzRfoVBaiBOxLlgJ0PXNdxRgH9VMhmh4Q1kGgp7KEGmMmfYMGRRZdSQNE5aBCVkYsuGGGeQ2Q6GNca191jMaruUxc8gR4wi7jqo3dSmHQf16hRXIFMUvvo0LeKjNeHLVCkXOC6BbGLAZtqRLO7y8opqCp5dV6yZTa9Of3MzFrObv0zXF3z25Ods08vMdmHoCE3r3Z9MpuP8ptLpooCH65jz8y+JNZktOJqafN1RVZ4h5rSvIvabOpUalzmAip3zoBN1qk0MFvwqNKuqXgIS02mrBpJI01VNJRQNuFKJjkJEYUAmoAVaCOJpjOrMFg5sK9DOigf8fdM8M6eESplwAyM3pCd9RLYQG0Re1ZcNxXBaixtFYNTVzG3VZjsPTeZphub7Bck3uklPtEA5m05F7xI92dfSkAmhaieOomlUlNUqLdvwOIwgigivDAaf0BLMw99b+v7WKw53njo+h3mwj5zTnDaZ475RyLO7VEEggaOFVGbFBPMubpo0ElDYpWt5swNVkW/Zes7GLOx05MvDXaJhVKa+9b9Q+Vq6FvpvLSet8KmFnIK974ttKwqsTHbSrXdLr4qqFdQSYnBpY7giQQyuwS4TsA8cc4/XBoaFDdy1X25P84y67XnkPxIupw+/0rRMoPn25MXi92Gi2VZVcPjThM+hMI71Ku91gvdOQsC0lDHmW/dTj9WN1IzPupFtwbac/TAGGXHmqLeQZrwuDTFcexuB+LzNIlgHvh/mSYWBu+OJ/8gTxFd7odvK4c5w/F7Iyz4v+XetuXGv7nlvH+55cZPtuXHHqPuadj773nEtiSx+ZLc6lrf4+ziFw==&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;oirbKWTgE0n337vZY3ht&amp;quot; name=&amp;quot;spaghetti&amp;quot;&amp;gt;7Vffb5swEP5r8rgIcCDkcUm7VdW6TYq0tI8OPsCbwZHjJGR//c5gAoSoXdZmndQ9oHDfnQ/uvvsRBmSWFR8VXaV3koEYeA4rBuRq4Hmu6wT4Y5B9hYQ1kCjOrFEDzPlPsKBj0Q1nsO4YaimF5qsuGMk8h0h3MKqU3HXNYim6T13RBHrAPKKijy440+khLqdR3ABPUvvo0LeKjNbGFlinlMldCyLXAzJTUurqLitmIEzy6rwsbu9uvk0W2UKJ6OvnnM6zze27ytmHc44cQlCQ65d17VWut1RsbL5u8JRcSIVprqLW+zqVSm5yBsadOyDTXco1zFc0MtodFg9iqc6EVUvUcG2KBhNKplTwJEchwhBAIbAFpTnS9N4qtDQO7OugDooj/p4I3j0wgqUMMgOt9njOegksh7aIR1bcNRVBaixtFYNbVzG1VZgcPDeZxhub7DMST3qJTxSAfl7OGV2nB9tzCcg4Y+ap05gLMZNCqvINSBxGEEWIr7WSP6ClWYb+qPR9Kdbc0WTo+R3mPKdPnRtM+tQR/0LMjXocAcOJY0WpdCoTmVNx3aDThkWTrsbmkzRVX9L1HbTe2/FJN1p2mYWC6/vW/YNxNfStdFVYz6Wwr4Ucw71vC61TRmyOlVJ9rorPBPUHXGJi5EZF8IidJUZTlcBj/sana0OBoJpvuy/34iz7vf4coh+Ol9vnXwjcZvB0f9L1qlpxMS9MNRy3GvMhZKNTzdrrvdBbkiBADbac/tJt9Uu142g87DZj6NVAe5CemKPkUmM0OEmTvCxNcRx75UR8miYWLAP/L9NEwuCf42l8kqcIL+/Nt5VLyHB8vOVenbHw/5p73pqb/OaaC15zzU0e7cs3Pkcdp//v84J9iWLzMVnqWp/k5PoX&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;defs /&gt;&lt;g&gt;&lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;180&quot; height=&quot;130&quot; rx=&quot;19.5&quot; ry=&quot;19.5&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(85.5,7.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;8&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 10px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;A&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;4&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;A&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&quot;110&quot; y=&quot;35&quot; width=&quot;120&quot; height=&quot;60&quot; rx=&quot;9&quot; ry=&quot;9&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(165.5,58.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;8&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 10px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;B&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;4&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;B&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;

&lt;p&gt;Diagrams can show connections between components.&lt;/p&gt;

&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; version=&quot;1.1&quot; width=&quot;370px&quot; height=&quot;111px&quot; viewBox=&quot;-0.5 -0.5 370 111&quot; content=&quot;&amp;lt;mxfile host=&amp;quot;Electron&amp;quot; modified=&amp;quot;2021-07-18T12:37:41.007Z&amp;quot; agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.4.2 Chrome/78.0.3904.130 Electron/7.1.4 Safari/537.36&amp;quot; etag=&amp;quot;mHNWgWwmcl76oc1_32mq&amp;quot; version=&amp;quot;12.4.2&amp;quot; type=&amp;quot;device&amp;quot; pages=&amp;quot;4&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;Xs2AaU-XmH5T2DiFEkDr&amp;quot; name=&amp;quot;containment&amp;quot;&amp;gt;rZRNc4MgEEB/jcfOiEwzuZrUND00PeTQXqlshSmKQzBqf32xrh+MyUwz7Ul4uyzw2DGg27x5NKwUz5qDCqKQNwF9CKKIkHDlPh1pe7IeQGYkx6QJHOUXIAyRVpLDyUu0WisrSx+muiggtR5jxujaT/vQyt+1ZBkswDFlaklfJbdivFc4BfYgM4Fbr+8xkLMhGcFJMK7rGaJJQLdGa9uP8mYLqpM3eOnX7a5Ex4MZKOxvFrzs2fthI9528jM57RNTx0+HO6xyZqrCC8d4WtsOCoyuCg5dFRLQTS2khWPJ0i5au0d3TNhcYfgMxkqnL1YyKxyzukvAXVwMmqvHJ6MU102gc7CmdSnN0Dj9itaf1rNHGZiYvQehCBk2QjZWnly5Aeq6QV20ULf5m7p/kESIb4lEFzRFFzStbrfkplPz/sRmvwCafAM=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;OP0lKuruEva2PuSopIhZ&amp;quot; name=&amp;quot;anti-containment&amp;quot;&amp;gt;tZTfT4MwEID/Gh5NgMqGj9uc4oOJyTQ+N/RGmxSKXRngX2+R40fFxCzqE+13xzX3XcEju7y517Tkj4qB9EKfNR659cIwCPyVfXSk7Uk8gEwLhkkTOIh3QOgjrQSDk5NolJJGlC5MVVFAahxGtVa1m3ZU0j21pBkswCGlcklfBTN87MufAgmIjOPRcYSBnA7JCE6cMlXPENl7ZKeVMv0qb3YgO3mDl5e0zfZJcl6T+C1+WK2fts/RVV/s7pJXxhY0FOZvS1/3pc9UVuhrg82adjCoVVUw6KoEHtnWXBg4lDTtorW9M5Zxk0sMn0EbYe1vpMgKy4zqEvAUG4Pmy1h+6CkYRdsbCioHo1v7Hla5wdG07raeDTpGxmczDghCipcrGytPAu0CHV7gM1r43P7O53+ZC31XXRBGS3fhN+5Wl6uz2+kr+YzN/jVk/wE=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;wdE6fbhklp7xuaH_Btzq&amp;quot; name=&amp;quot;connections&amp;quot;&amp;gt;7VdRc5swDP41eWwuYCD0sUm7bl12u2se1j46WIA3g3PGSch+/WRiAoRcurbL1rvugQv6JMuWPkkOAzLNyltFl+kXyUAM3BErB+R64LqOMwrwxyDbHRLWQKI4s0YNMOc/wYIji644g6JjqKUUmi+7YCTzHCLdwahSctM1i6Xo7rqkCfSAeURFH/3GmU73cY0axUfgSWq3Dn2ryGhtbIEipUxuWhC5GZCpklLv3rJyCsIkr85Ltsqms8tPRG/4/N6/kus7en+xc/bhOUv2ISjI9YtdX8wXo3x2S0RRyMe72NPzz4ldMlpTsbL5urLB6m2dQSVXOQPjxRmQySblGuZLGhntBmsGsVRnwqolarg2tYJ5JBMqeJKjEOHJQSGwBqU5snNlFVoaB/YUqIPygLYnYnb2RGAFg8xAqy2us14CG5+tXc+Km6YQSI2lrRpw6uKltviSvecmwfhic/yMfDu9fE9el29Gi3Rv+9zkZ5wxs+sk5kJMpZCqOgGJwwiiCPFCK/kDWppF6HuV73Mx5njjoet3WAv7rDnBZZ814p+JNLdHETCcMVaUSqcykTkVNw06aUg02WpsZtIUfMXWd9B6awcmXWnZJRZKrh9a74/G1dC30nVpPVfCthZyDPehLbRWGbFZVkn1ul18JqgXUImJkSsVwYkEEjv3qUpAn7Dzj5eGAkE1X3cP98dZJr3WHKIfjo/T518IvL/g6fakxXJ3qcW8NNVw2GnMh5B5x3q113qhuyBBgBrsOP212+nn6kZsxoNedGugPUOPjFByrgnqHaVJnpemOI7daiA+TRMLFoH/l2kiYfDmePKP8hTh4777tnKIMxy/NcKC/7fc62658W/ect6/vOXGJ9vyfY9R9zLs/fc8Y1ui2Hw8VrrWJzi5+QU=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;oirbKWTgE0n337vZY3ht&amp;quot; name=&amp;quot;spaghetti&amp;quot;&amp;gt;7Vffb5swEP5reFwEGAh5bNJsVbVukyIt3aODD/BmcOSYhuyvn01MgBAly1rWSd0DCvedffbddz+ChWZZ+UHgdfrACTDLtUlpoVvLdR3HDtSPRnZ7JKyBRFBiFjXAgv4EA9oGLSiBTWeh5JxJuu6CEc9ziGQHw0LwbXdZzFn31DVOoAcsIsz66JISmR78shvFHdAkNUeHvlFkuF5sgE2KCd+2IDS30ExwLvdvWTkDpoNXx2V5/3D3dbLMloJFXz7leJEV9+/2xt5fs+XggoBcvqxpd2/6CbPCxOvGOCt3dQQFL3IC2opjoek2pRIWaxxp7VbljMJSmTGj5kpDpc4VFUc0xYwmuRIidXMQCngCIali58YoJNcGzC2UDsoj2i747ByIUBkMPAMpdmqfsRIY6kzuekbcNomAaixt5YBTJy82yZccLDcBVi8mxlfEG/XiPX1evAnepIe11wY/o4ToU6cxZWzGGRfVDVAcRhBFCt9IwX9AS7MKfa+yPRRjjjcZuX6HNdfu0+YEkz5tyB+INa/HERDVZIzIhUx5wnPM5g06bVjU4WrWfOQ64yu6voOUO9MxcSF5l1koqXxsvX/Tpka+kW5LY7kSdrWQK3cf20JrlxabbZVU79v7p536Ay5VYHghIjizzhAjsUjgnL3x6dwQwLCkT93LvTjLfq82R8oOVY/T558xNcDgcn3izXo/1WJa6mw4LjXiQ0i8U8Xaq73QXaEgUBpVcvJzt9SHKkdvPOoWY+jWQLuJnuihaKgWGpykiQ9LUxzHbtURL9NEglXg/2WaUBj8czyNT/IUqcd982XlIDQaH0+5V2cs/D/mnjfmJr855oLXHHOTs3X5xvuobff/fQ5Yl0psvh8rXesrHM1/AQ==&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;defs /&gt;&lt;g&gt;&lt;rect x=&quot;13&quot; y=&quot;0&quot; width=&quot;340&quot; height=&quot;110&quot; rx=&quot;16.5&quot; ry=&quot;16.5&quot; fill-opacity=&quot;0.5&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-opacity=&quot;0.5&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(178.5,7.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;8&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 10px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;A&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;4&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;A&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&quot;100.25&quot; y=&quot;40&quot; width=&quot;169&quot; height=&quot;35&quot; rx=&quot;5.25&quot; ry=&quot;5.25&quot; fill-opacity=&quot;0.5&quot; fill=&quot;#f8cecc&quot; stroke=&quot;#b85450&quot; stroke-opacity=&quot;0.5&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(179.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;9&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 9px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;B&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;5&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;B&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&quot;M 31 58 L 78.63 58&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 83.88 58 L 76.88 61.5 L 78.63 58 L 76.88 54.5 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;15.5&quot; cy=&quot;57.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#d5e8d4&quot; stroke=&quot;#82b366&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(5.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;20&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 20px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./i/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;10&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./i/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;354.5&quot; cy=&quot;57.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(342.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;24&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 24px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./o/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;12&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./o/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;99.75&quot; cy=&quot;57.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#d5e8d4&quot; stroke=&quot;#82b366&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(80.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;38&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 40px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./c/2/i/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;19&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./c/2/i/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&quot;M 281 58 L 333.63 58&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 338.88 58 L 331.88 61.5 L 333.63 58 L 331.88 54.5 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;266.25&quot; cy=&quot;57.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(244.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;42&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 44px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./c/2/o/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;21&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./c/2/o/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;

&lt;p&gt;Diagrams can show spaghetti connections. Below, the connections cross the boundaries of box A&lt;/p&gt;

&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; version=&quot;1.1&quot; width=&quot;370px&quot; height=&quot;196px&quot; viewBox=&quot;-0.5 -0.5 370 196&quot; content=&quot;&amp;lt;mxfile host=&amp;quot;Electron&amp;quot; modified=&amp;quot;2021-07-18T12:37:15.738Z&amp;quot; agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.4.2 Chrome/78.0.3904.130 Electron/7.1.4 Safari/537.36&amp;quot; etag=&amp;quot;0JkPp7tt_XW_nLZ0nv9g&amp;quot; version=&amp;quot;12.4.2&amp;quot; type=&amp;quot;device&amp;quot; pages=&amp;quot;4&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;Xs2AaU-XmH5T2DiFEkDr&amp;quot; name=&amp;quot;containment&amp;quot;&amp;gt;rZRNc4MgEEB/jcfOiEwzuZrUND00PeTQXqlshSmKQzBqf32xrh+MyUwz7Ul4uyzw2DGg27x5NKwUz5qDCqKQNwF9CKKIkHDlPh1pe7IeQGYkx6QJHOUXIAyRVpLDyUu0WisrSx+muiggtR5jxujaT/vQyt+1ZBkswDFlaklfJbdivFc4BfYgM4Fbr+8xkLMhGcFJMK7rGaJJQLdGa9uP8mYLqpM3eOnX7a5Ex4MZKOxvFrzs2fthI9528jM57RNTx0+HO6xyZqrCC8d4WtsOCoyuCg5dFRLQTS2khWPJ0i5au0d3TNhcYfgMxkqnL1YyKxyzukvAXVwMmqvHJ6MU102gc7CmdSnN0Dj9itaf1rNHGZiYvQehCBk2QjZWnly5Aeq6QV20ULf5m7p/kESIb4lEFzRFFzStbrfkplPz/sRmvwCafAM=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;OP0lKuruEva2PuSopIhZ&amp;quot; name=&amp;quot;anti-containment&amp;quot;&amp;gt;tZTfT4MwEID/Gh5NgMqGj9uc4oOJyTQ+N/RGmxSKXRngX2+R40fFxCzqE+13xzX3XcEju7y517Tkj4qB9EKfNR659cIwCPyVfXSk7Uk8gEwLhkkTOIh3QOgjrQSDk5NolJJGlC5MVVFAahxGtVa1m3ZU0j21pBkswCGlcklfBTN87MufAgmIjOPRcYSBnA7JCE6cMlXPENl7ZKeVMv0qb3YgO3mDl5e0zfZJcl6T+C1+WK2fts/RVV/s7pJXxhY0FOZvS1/3pc9UVuhrg82adjCoVVUw6KoEHtnWXBg4lDTtorW9M5Zxk0sMn0EbYe1vpMgKy4zqEvAUG4Pmy1h+6CkYRdsbCioHo1v7Hla5wdG07raeDTpGxmczDghCipcrGytPAu0CHV7gM1r43P7O53+ZC31XXRBGS3fhN+5Wl6uz2+kr+YzN/jVk/wE=&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;wdE6fbhklp7xuaH_Btzq&amp;quot; name=&amp;quot;connections&amp;quot;&amp;gt;7VffU5tAEP5r8mgmcEDw0USrtXY6Yx7Uxwu3wLUHmzkuCelf3yU5AkhGqzatM/aBCfvt7cLutz/CgE2z8lLzRfoVBaiBOxLlgJ0PXNdxRgH9VMhmh4Q1kGgp7KEGmMmfYMGRRZdSQNE5aBCVkYsuGGGeQ2Q6GNca191jMaruUxc8gR4wi7jqo3dSmHQf16hRXIFMUvvo0LeKjNeHLVCkXOC6BbGLAZtqRLO7y8opqCp5dV6yZTa9Of3MzFrObv0zXF3z25Ods08vMdmHoCE3r3Z9MpuP8ptLpooCH65jz8y+JNZktOJqafN1RVZ4h5rSvIvabOpUalzmAip3zoBN1qk0MFvwqNKuqXgIS02mrBpJI01VNJRQNuFKJjkJEYUAmoAVaCOJpjOrMFg5sK9DOigf8fdM8M6eESplwAyM3pCd9RLYQG0Re1ZcNxXBaixtFYNTVzG3VZjsPTeZphub7Bck3uklPtEA5m05F7xI92dfSkAmhaieOomlUlNUqLdvwOIwgigivDAaf0BLMw99b+v7WKw53njo+h3mwj5zTnDaZ475RyLO7VEEggaOFVGbFBPMubpo0ElDYpWt5swNVkW/Zes7GLOx05MvDXaJhVKa+9b9Q+Vq6FvpvLSet8KmFnIK974ttKwqsTHbSrXdLr4qqFdQSYnBpY7giQQyuwS4TsA8cc4/XBoaFDdy1X25P84y67XnkPxIupw+/0rRMoPn25MXi92Gi2VZVcPjThM+hMI71Ku91gvdOQsC0lDHmW/dTj9WN1IzPupFtwbac/TAGGXHmqLeQZrwuDTFcexuB+LzNIlgHvh/mSYWBu+OJ/8gTxFd7odvK4c5w/F7Iyz4v+XetuXGv7nlvH+55cZPtuXHHqPuadj773nEtiSx+ZLc6lrf4+ziFw==&amp;lt;/diagram&amp;gt;&amp;lt;diagram id=&amp;quot;oirbKWTgE0n337vZY3ht&amp;quot; name=&amp;quot;spaghetti&amp;quot;&amp;gt;7Vffb5swEP5reFwEGAh5bNJsVbVukyIt3aODD/BmcOSYhuyvn01MgBAly1rWSd0DCvedffbddz+ChWZZ+UHgdfrACTDLtUlpoVvLdR3HDtSPRnZ7JKyBRFBiFjXAgv4EA9oGLSiBTWeh5JxJuu6CEc9ziGQHw0LwbXdZzFn31DVOoAcsIsz66JISmR78shvFHdAkNUeHvlFkuF5sgE2KCd+2IDS30ExwLvdvWTkDpoNXx2V5/3D3dbLMloJFXz7leJEV9+/2xt5fs+XggoBcvqxpd2/6CbPCxOvGOCt3dQQFL3IC2opjoek2pRIWaxxp7VbljMJSmTGj5kpDpc4VFUc0xYwmuRIidXMQCngCIali58YoJNcGzC2UDsoj2i747ByIUBkMPAMpdmqfsRIY6kzuekbcNomAaixt5YBTJy82yZccLDcBVi8mxlfEG/XiPX1evAnepIe11wY/o4ToU6cxZWzGGRfVDVAcRhBFCt9IwX9AS7MKfa+yPRRjjjcZuX6HNdfu0+YEkz5tyB+INa/HERDVZIzIhUx5wnPM5g06bVjU4WrWfOQ64yu6voOUO9MxcSF5l1koqXxsvX/Tpka+kW5LY7kSdrWQK3cf20JrlxabbZVU79v7p536Ay5VYHghIjizzhAjsUjgnL3x6dwQwLCkT93LvTjLfq82R8oOVY/T558xNcDgcn3izXo/1WJa6mw4LjXiQ0i8U8Xaq73QXaEgUBpVcvJzt9SHKkdvPOoWY+jWQLuJnuihaKgWGpykiQ9LUxzHbtURL9NEglXg/2WaUBj8czyNT/IUqcd982XlIDQaH0+5V2cs/D/mnjfmJr855oLXHHOTs3X5xvuobff/fQ5Yl0psvh8rXesrHM1/AQ==&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;defs /&gt;&lt;g&gt;&lt;rect x=&quot;13&quot; y=&quot;0&quot; width=&quot;340&quot; height=&quot;110&quot; rx=&quot;16.5&quot; ry=&quot;16.5&quot; fill-opacity=&quot;0.5&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-opacity=&quot;0.5&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(178.5,7.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;8&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 10px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;A&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;4&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;A&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&quot;102.25&quot; y=&quot;160&quot; width=&quot;169&quot; height=&quot;35&quot; rx=&quot;5.25&quot; ry=&quot;5.25&quot; fill-opacity=&quot;0.5&quot; fill=&quot;#f8cecc&quot; stroke=&quot;#b85450&quot; stroke-opacity=&quot;0.5&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(181.5,171.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;9&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 9px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;B&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;5&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;B&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&quot;M 31 58 L 59 58 L 59 178 L 80.63 178&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 85.88 178 L 78.88 181.5 L 80.63 178 L 78.88 174.5 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;15.5&quot; cy=&quot;57.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#d5e8d4&quot; stroke=&quot;#82b366&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(5.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;20&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 20px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./i/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;10&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./i/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;354.5&quot; cy=&quot;57.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(342.5,51.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;24&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 24px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./o/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;12&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./o/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;101.75&quot; cy=&quot;177.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#d5e8d4&quot; stroke=&quot;#82b366&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(82.5,171.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;38&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 40px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./c/2/i/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;19&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./c/2/i/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&quot;M 283 178 L 311 178 L 311 58 L 333.63 58&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 338.88 58 L 331.88 61.5 L 333.63 58 L 331.88 54.5 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;268.25&quot; cy=&quot;177.5&quot; rx=&quot;15&quot; ry=&quot;15&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; pointer-events=&quot;all&quot; /&gt;&lt;g opacity=&quot;0.5&quot; transform=&quot;translate(246.5,171.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;42&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 44px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;./c/2/o/1&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;21&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;./c/2/o/1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;

&lt;h1 id=&quot;markdown-elision&quot;&gt;Markdown Elision&lt;/h1&gt;

&lt;p&gt;Emacs’ markdown editor can elide sections of text based on the number of octothorpes (“#”) at the front of the lines.&lt;/p&gt;

&lt;p&gt;It is possible to use this hierarchical elision as a way to show/hide layers of software.&lt;/p&gt;

&lt;p&gt;[Emacs’ markdown editor is implemented using emacs’ org-mode.]&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.literatureandlatte.com/scapple&quot;&gt;Scapple&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.b-rhymes.com&quot;&gt;B-rhymes&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://rhymezone.com&quot;&gt;Rhymezone&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;

&lt;p&gt;~/Desktop/blogs 20210718/diagrams-connections.svg&lt;/p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:pp&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;I thank Pat Pattison for pointing this technique out to me. &lt;a href=&quot;#fnref:pp&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">In creative endeavours, the techniques of brainstorming are used.</summary></entry><entry><title type="html">Elements of DI (WIP)</title><link href="https://computingsimplicity.neocities.org/2021/07/16/Elements-of-DI.html" rel="alternate" type="text/html" title="Elements of DI (WIP)" /><published>2021-07-16T00:00:00-04:00</published><updated>2021-07-16T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/16/Elements%20of%20DI</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/16/Elements-of-DI.html">&lt;ul&gt;
  &lt;li&gt;values
    &lt;ul&gt;
      &lt;li&gt;object&lt;/li&gt;
      &lt;li&gt;collection of object&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;components
    &lt;ul&gt;
      &lt;li&gt;parameter delivery (inputs)&lt;/li&gt;
      &lt;li&gt;invocation (N.B. separate from input/output delivery)&lt;/li&gt;
      &lt;li&gt;result delivery (outputs)&lt;/li&gt;
      &lt;li&gt;run forever by default&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;message passing&lt;/li&gt;
  &lt;li&gt;RID - relative ID’s (hierarchical organization of components and hierarchical message passing)&lt;/li&gt;
  &lt;li&gt;Sections
    &lt;ul&gt;
      &lt;li&gt;type description&lt;/li&gt;
      &lt;li&gt;signatures&lt;/li&gt;
      &lt;li&gt;implementation&lt;/li&gt;
      &lt;li&gt;foreign functions&lt;/li&gt;
      &lt;li&gt;design rules&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Dispatcher&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;di&quot;&gt;DI&lt;/h1&gt;
&lt;p&gt;DI means Design Intent (often called Architecture)&lt;/p&gt;

&lt;h1 id=&quot;scn&quot;&gt;SCN&lt;/h1&gt;

&lt;p&gt;SCN means Solution Centric Notation.&lt;/p&gt;

&lt;p&gt;A notation is like a light-weight DSL.&lt;/p&gt;

&lt;p&gt;A DSL is like a GPL, but specialized.&lt;/p&gt;

&lt;p&gt;A DSL is targetted at a specific sub-problem, but generalized. For example REGEXP is a DSL for pattern-matching strings.  For example SQL is a DSL for database querying.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;notation&lt;/em&gt; is specialized to a specific problem / project.  A &lt;em&gt;notation&lt;/em&gt; is not generalized.  More than one &lt;em&gt;SCN&lt;/em&gt; might be used in a project.  For example, the &lt;a href=&quot;https://github.com/bmfbp/bmfbp&quot;&gt;Arrowgrams&lt;/a&gt; project contains an SCN for PROLOG-like fact (triple) matching, another SCN for &lt;a href=&quot;https://github.com/guitarvydas/parsing-assembler&quot;&gt;parsing&lt;/a&gt;, another SCN for &lt;a href=&quot;https://github.com/guitarvydas/scanner&quot;&gt;scanning&lt;/a&gt; (lexing), another SCN for inter-component message passing &lt;a href=&quot;https://github.com/guitarvydas/cl-event-passing&quot;&gt;cl-event-passing&lt;/a&gt;, another SCN for &lt;a href=&quot;https://github.com/guitarvydas/stack-dsl&quot;&gt;type definition&lt;/a&gt;, etc, etc.&lt;sup id=&quot;fnref:lisp&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:lisp&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;[DSL means Domain Specific Language, GPL means General purpose Programming Language].&lt;/p&gt;

&lt;h1 id=&quot;example&quot;&gt;Example&lt;/h1&gt;

&lt;p&gt;I’m working on this at the moment, it is unfinished and not debugged, but gives some of the flavor of what a DSL for DI might be:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# types
  rid = {
    path
    ns
    name
  }

  thing = compound { val component }

  val = any

  component = :foreign
  parent-component = component
  child = component

  any = :foreign

  string = :foreign
  path = :foreign
  ns = :foreign
  name = :foreign

  yesno = 'yes' | 'no'
  
# end types

# signatures

// RID means Relative ID
def-component% &amp;lt;rid
def-input% &amp;lt;rid
def-output% &amp;lt;rid
get% &amp;lt;rid &amp;gt;val
set% &amp;lt;rid &amp;lt;val

# layer effective address
// ea means Effective Address - the resolved path part of a RID
ea% &amp;lt;path &amp;gt;component
def-ea% &amp;lt;path &amp;gt;component
# end layer effective address

# end signatures

# foreign functions
// foreign functions are defined elsewhere (in the base language)
// synchronous and always return a value
is leaf &amp;lt;rid &amp;gt;yesno
lookup component at top level &amp;lt;path &amp;lt;ns &amp;lt;name &amp;gt;component
lookup contained component &amp;lt;path &amp;lt;ns &amp;lt;name &amp;gt;component
lookup or create component at top level &amp;lt;path &amp;lt;ns &amp;lt;name &amp;gt;component
lookup or create contained component &amp;lt;path &amp;lt;ns &amp;lt;name &amp;gt;component
create input pin raw &amp;lt;path &amp;lt;ns &amp;lt;name
create output pin raw &amp;lt;path &amp;lt;ns &amp;lt;name
raw get &amp;lt;parent &amp;lt;rid.ns &amp;lt;rid.name
raw set &amp;lt;parent &amp;lt;rid.ns &amp;lt;rid.name &amp;lt;v
# end foreign functions

# implementation

def-top-level-component% &amp;lt;name
  component = @lookup or create component at top level &amp;lt;name
  component

def-contained-component% &amp;lt;rid
  outer = def-ea% &amp;lt;rid.path
    design rule `must use component namespace' &amp;lt;rid
  component = @lookup or create contained component &amp;lt;path.path &amp;lt;path.ns &amp;lt;path.name
  component

def-input% &amp;lt;rid
  outer = ea% &amp;lt;rid.path
    design rule `must use input namespace' &amp;lt;rid
    design rule `input pin must not be defined more than once` &amp;lt;outer &amp;lt;rid.ns &amp;lt;rid.name
  @create-input-pin-raw &amp;lt;outer &amp;lt;rid.ns &amp;lt;rid.name
  nothing   

def-output% &amp;lt;rid
  outer = ea% &amp;lt;rid.path
    design rule `must use output namespace' &amp;lt;path
    design rule `output pin must not be defined more than once` &amp;lt;outer &amp;lt;rid.ns &amp;lt;rid.name
  @create-output-pin-raw &amp;lt;out &amp;lt;rid.ns &amp;lt;rid.name
  nothing   

get% &amp;lt;rid &amp;gt;val
  parent = ea% &amp;lt;rid.path
    design rule `must be a valid namespace' &amp;lt;rid
    design rule `value must exist' &amp;lt;parent &amp;lt;rid.ns &amp;lt;rid.name
  v = @raw-get &amp;lt;parent &amp;lt;rid.ns &amp;lt;rid.name
  v
   
set% &amp;lt;rid &amp;lt;val
  parent = ea% &amp;lt;rid.path
    design rule `must be a valid namespace' &amp;lt;rid
    design rule `value must not exist' &amp;lt;parent &amp;lt;rid.ns &amp;lt;rid.name
  @raw-set &amp;lt;parent &amp;lt;rid.ns &amp;lt;rid.name &amp;lt;v
  nothing   

add-connection% &amp;lt;rid &amp;lt;rid1 &amp;lt;rid1
  parent = ea% &amp;lt;rid.path
    design rule `must use connection namespace' &amp;lt;rid
    design rule `must use i/o namespace' &amp;lt;rid1
    design rule `must use i/o namespace' &amp;lt;rid2
  @raw-add-connection &amp;lt;rid.name &amp;lt;parent &amp;lt;rid1 &amp;lt;rid2

# layer `effective address'
ea% &amp;lt;path &amp;gt;component
    design rule `must use component namespace' &amp;lt;path.ns
  [ @is leaf &amp;lt;path
    yes -&amp;gt; component = @lookup component at top level &amp;lt;path
    no  -&amp;gt;
      outer = ea% &amp;lt;path.path
        design rule `must be a component' &amp;lt;outer
        design rule `value must exist' &amp;lt;outer &amp;lt;path.ns &amp;lt;path.name
      component = @lookup contained component &amp;lt;outer &amp;lt;path.ns &amp;lt;path.name
  ]
  component


def-ea% &amp;lt;path &amp;gt;component
  [ @is leaf &amp;lt;path.path
    yes -&amp;gt; component = @lookup or create component at top level &amp;lt;path.path &amp;lt;path.ns &amp;lt;path.name
    no  -&amp;gt;
      outer = ea% &amp;lt;path.path
      component = @lookup or create contained component &amp;lt;outer &amp;lt;path.ns &amp;lt;path.name
  ]
  component
# end layer `effective address'


# end implementation

# design rules
`must use component namespace' &amp;lt;rid
`must use input namespace' &amp;lt;rid
`must use output namespace' &amp;lt;rid
`input pin must not be defined more than once` &amp;lt;component &amp;lt;ns &amp;lt;name
`output pin must not be defined more than once` &amp;lt;component &amp;lt;ns &amp;lt;name
`must be a valid namespace' &amp;lt;rid
`value must exist' &amp;lt;path &amp;lt;ns &amp;lt;name
`value must not exist' &amp;lt;path &amp;lt;ns &amp;lt;name
`must be a component' &amp;lt;any
`must use connection namespace' &amp;lt;rid
`must use i/o namespace' &amp;lt;rid
# end design rules

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is an expression language - everything returns a value.  Statements are processed in sequence and the value is the last statement encountered.&lt;/p&gt;

&lt;p&gt;”#” is used to distinguish sections&lt;/p&gt;

&lt;p&gt;Long names that include spaces are written `…’ (syntax borrowed from M4).&lt;/p&gt;

&lt;p&gt;”&amp;lt;” means input.&lt;/p&gt;

&lt;p&gt;”&amp;gt;” means output.&lt;/p&gt;

&lt;p&gt;Indentation denotes layering.&lt;/p&gt;

&lt;p&gt;”@” means call a foreign function (synchronous call).&lt;/p&gt;

&lt;p&gt;Foreign functions are implemented elsewhere in some other language.  Akin to &lt;em&gt;imports&lt;/em&gt; in some languages.&lt;/p&gt;

&lt;p&gt;”[]” means &lt;em&gt;choice&lt;/em&gt; (if-then-else or case).  The first item after “[” is an expression that produces a value that is cased-on.&lt;/p&gt;

&lt;p&gt;“x -&amp;gt; …” means “case x”.&lt;/p&gt;

&lt;p&gt;The type DSL is documented elsewhere &lt;a href=&quot;https://guitarvydas.github.io/2021/07/05/Type-DSL-(SCN).html&quot;&gt;Type SCN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that design-rules are relegated to lower levels (deeper indentation). Design rules are like error checks and type checks, but specific to the project-at-hand.  Using current GPLs, these checks would be wound into the code.  It is &lt;em&gt;possible&lt;/em&gt; to separate design-rule checks from code in current GPLs, but this is not frequently done.&lt;/p&gt;

&lt;p&gt;Note that using an &lt;em&gt;SCN&lt;/em&gt; does &lt;u&gt;not&lt;/u&gt; make the logic a no-brainer to understand.  The goal is simply to unwind architecture-thinking from details-thinking.  At present, code maintainers must understand the code they are working on, anyway. This costs time. Splitting the code into DI (Architecture) and Implementation should reduce the effort required to understand a project (but may not save time - understanding still requires thought).  Using an SCN enables higher-level thinking for the architect(s) of a project.&lt;/p&gt;

&lt;h1 id=&quot;layers&quot;&gt;Layers&lt;/h1&gt;

&lt;p&gt;Building a project in layers, e.g. using an SCN, enables the stratification of the development process.&lt;/p&gt;

&lt;p&gt;An &lt;em&gt;architect&lt;/em&gt; can write out a design in DI, an &lt;em&gt;implementation engineer&lt;/em&gt; can work out the details, a &lt;em&gt;test engineer&lt;/em&gt; can examine the project from a testability perspective, a &lt;em&gt;coder&lt;/em&gt; can implement the code, etc., etc.&lt;/p&gt;

&lt;h1 id=&quot;software-development-roles&quot;&gt;Software Development Roles&lt;/h1&gt;

&lt;p&gt;Further discussion of a protoype set of &lt;a href=&quot;https://guitarvydas.github.io/2020/12/10/Software-Development-Roles.html&quot;&gt;roles&lt;/a&gt; and stratification of the software development process.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:lisp&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;most of the SCNs in Arrowgrams were built on top of Common Lisp and the ESRAP (PEG) parsing library and Lisp macros.  Arrowgrams was a bootstrap project.  Since then, I discovered Ohm-JS and, maybe, would have used it instead of some of the other technologies.  This was a chicken-before-the-egg problem: we had to use &lt;em&gt;something&lt;/em&gt; to implement the bootstrapped version. &lt;a href=&quot;#fnref:lisp&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">values object collection of object components parameter delivery (inputs) invocation (N.B. separate from input/output delivery) result delivery (outputs) run forever by default message passing RID - relative ID’s (hierarchical organization of components and hierarchical message passing) Sections type description signatures implementation foreign functions design rules Dispatcher</summary></entry><entry><title type="html">Elements of a DI Drawing (WIP)</title><link href="https://computingsimplicity.neocities.org/2021/07/16/Elements-of-a-DI-Drawing.html" rel="alternate" type="text/html" title="Elements of a DI Drawing (WIP)" /><published>2021-07-16T00:00:00-04:00</published><updated>2021-07-16T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/16/Elements%20of%20a%20DI%20Drawing</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/16/Elements-of-a-DI-Drawing.html">&lt;p&gt;A drawing contains nothing but graphical elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rectangle&lt;/li&gt;
  &lt;li&gt;ellipse&lt;/li&gt;
  &lt;li&gt;line&lt;/li&gt;
  &lt;li&gt;text.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each element contains:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x,y)&lt;/code&gt; coordinate of centre point&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rectangle contains:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x,y)&lt;/code&gt; coordinate of centre point&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(0,0)&lt;/code&gt; is that the top-left of the canvas&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(w,h)&lt;/code&gt; width and height of rectangle (e.g. top = x-w/2, bottom = x+w/2)&lt;/li&gt;
  &lt;li&gt;shape attributes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ellipse contains:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x,y)&lt;/code&gt; coordinate of centre point&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(0,0)&lt;/code&gt; is that the top-left of the canvas&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(w,h)&lt;/code&gt; width and height of ellipse&lt;/li&gt;
  &lt;li&gt;shape attributes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Line contains:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x1,y1)&lt;/code&gt; start point&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x2,y2)&lt;/code&gt; end point&lt;/li&gt;
  &lt;li&gt;path points &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x,y)&lt;/code&gt;’s excluding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x1,y1)&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x2,y2)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;line attributes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Text contains:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x,y)&lt;/code&gt; of top-left corner&lt;/li&gt;
  &lt;li&gt;attributes&lt;/li&gt;
  &lt;li&gt;text attributes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Attributes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shape Attributes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Attributes&lt;/li&gt;
  &lt;li&gt;thickness (outline thickness, default=1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Line attributes&lt;/p&gt;

&lt;p&gt;Text Attributes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Attributes&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;di&quot;&gt;DI&lt;/h1&gt;
&lt;p&gt;DI means Design Intent (often called Architecture)&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;</content><author><name></name></author><summary type="html">A drawing contains nothing but graphical elements:</summary></entry><entry><title type="html">AST Tree</title><link href="https://computingsimplicity.neocities.org/2021/07/14/AST-Tree.html" rel="alternate" type="text/html" title="AST Tree" /><published>2021-07-14T00:00:00-04:00</published><updated>2021-07-14T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/14/AST%20Tree</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/14/AST-Tree.html">&lt;p&gt;I created a grammar and drew a diagram of the AST.&lt;/p&gt;

&lt;p&gt;The diagram shows that certain constructs are missing from the textual representation&lt;/p&gt;

&lt;h1 id=&quot;grammar&quot;&gt;Grammar&lt;/h1&gt;
&lt;p&gt;Below is a grammar for PEG (Ohm-JS) that I am working on.&lt;/p&gt;

&lt;p&gt;The point of this essay is to discuss the diagram of the grammar (not, to discuss the grammar itself).&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ex3 {
  Specification = MatchSection OutputSection
  MatchSection = &quot;#&quot;+ &quot;grok&quot; Rule+
  OutputSection = &quot;#&quot;+ &quot;emit&quot; Emitter+

  Rule = Rid &quot;&amp;lt;-&quot; Patterns

  Patterns = MultiplePatterns | SinglePattern
  MultiplePatterns = Pattern Pattern+
  SinglePattern = Pattern

  Pattern = PatternWithOperator | PatternWithoutOperator
  PatternWithOperator = Primary Operator
  PatternWithoutOperator = Primary
  Emitter = Eid &quot;-&amp;gt;&quot; codeToEOL

  Primary = ParenthesizedPrimary | Range | quoted | RuleReference
  ParenthesizedPrimary = &quot;(&quot; Patterns &quot;)&quot;
  RuleReference = id ~arrow
  Range = &quot;[&quot; alnum &quot;-&quot; alnum &quot;]&quot;
  quoted = &quot;'&quot; any &quot;'&quot;
  
  Operator = &quot;+&quot; | &quot;?&quot; | &quot;*&quot;
  
  Rid = id &amp;amp;arrow
  Eid = id &amp;amp;arrow
  
  arrow = &quot;&amp;lt;-&quot; | &quot;-&amp;gt;&quot;
  
  keyword = &quot;grok&quot; | &quot;emit&quot;
  id = ~keyword letter alnum*
  
  codeToEOL = (~newline any)* newline+
  newline = &quot;\n&quot;

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;ast-view-1&quot;&gt;AST View 1&lt;/h1&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; version=&quot;1.1&quot; width=&quot;1412px&quot; height=&quot;1242px&quot; viewBox=&quot;-0.5 -0.5 1412 1242&quot; content=&quot;&amp;lt;mxfile host=&amp;quot;Electron&amp;quot; modified=&amp;quot;2021-07-14T12:58:42.777Z&amp;quot; agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.4.2 Chrome/78.0.3904.130 Electron/7.1.4 Safari/537.36&amp;quot; etag=&amp;quot;b9cHAlvI0ocNJBLZL1fE&amp;quot; version=&amp;quot;12.4.2&amp;quot; type=&amp;quot;device&amp;quot; pages=&amp;quot;2&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;yf0gERGoFfMX_B7MOgHz&amp;quot; name=&amp;quot;view 1&amp;quot;&amp;gt;7V1bc6M2FP41nl5msgMSCHhskk3b2U27k8x0u49aW7bpYuRiOZf99RW2sA3CDk4xRwr2PqwREMN3js7lOwcxwFezp18zOp/e8hFLBsgZPQ3w9QAhFBBf/pePPK9H3DBUI5MsHqmx7cB9/J2pQUeNLuMRW5QOFJwnIp6XB4c8TdlQlMZolvHH8mFjnpR/dU4nTBu4H9JEH/0cj8RUjbqOs93xG4snU/XToa92zGhxsBpYTOmIP+4M4fcDfJVxLtbfZk9XLMnRK3BZn3ezZ+/mwjKWiiYnkOj25sPdh98f/5jfPHj3zP948deFEsYDTZbqhtXFiucCATaSgKhNnokpn/CUJu+3o5fb0Y+cz+Vhrhz8hwnxrORJl4LLIfYUi7/lpvPOV1tf1MH59+tcaZxi47nYSEX2vHNSvvlld9/2tNVWcV7Gl+mIjdTfH8dJcsUTnq1uCY/HYzQcyvGFyPg3trPHWX3knjUM+b3vhVsNLfgyG7IDGBdqS7MJEweOQxulkNOJ8RmT9yPPy1hCRfxQvg6q1HqyOW4reflFCf8IRSBtKEIZdBPVwgpFwJCKEAAqwiuF+hoFskIRPEhFcDVFuFtK4WrKkCTSF+dCp4v52gOP46dc9gqxB5YJ9nQYM/0eixOI8p4qfgjV5uPWF3tqaLrjhYux9meHZXayE3VGDdU5ANXnANKydejizBK5DylypJsweXy3FswrGzDkAFswXDMLSCJ/9fLiGGSq/tPP/9VpH1l98jN4KnbG15/TeAlwkIvs9a3bmqoWUBI6tTboKsB+2zbIa2iDQtAoSg+jzpoApQkRqCY4uumVoFSVQVrB3BjTJJ6kcmQowWASusvcQMZDmvyidszi0WitG2wRf6dfV+fnuM55nIrVxfuXA/86RxpfJvQrSy7p8NtkpUrlzEd+dPt8c1OKGmrss6Lc1E8PNkTXrgQPzIm91vzCeRf6blSy6IUrbywq9dc/5WDsHMLH44VUkaosNxfxevF6mnA/USFFly6Ocavr6VIwjS25R+yY5h5boR3NN4otmriwoYlzQVlE17L02CbBgrKCYV1Ae2mO8zqBkyIHbarzznGRX/ZR2HQfFWpCvF3mpbSEvcZXteCZUMUzYQTtmXpCErVowKKmBgyU/Ys0ud7H6WSj+B3rvWec3utU2SuQGdHFdKP2LcDkojJMngcNk57CGQDTpipiCkyoJ/TXfnJjHx3Sot11m7IeLigBhnpCgFmiC8AUmG4Y+kmBvWDRcwqsZNKLary5uYW7lwA7xjWehP+qRlvw/rEnNEk3zTRNGRQEmoCgnmSWhskclDVzdcJF2cTPsZj+OWcZFTX+77S5Z7Ua4BNoa9iTakA3M6MpHbMGGWxm6HzMzszgSwE0OXzTJgfWTUg/JkeX6VOB6cud2aAhBNYnzVkX4HQBtLXRO1NsJunCnmJhR7pwpthM0oUANLBykKYM/aTYvBcptiBybGPZkC7dT1k8o0pzIFm2oFKsI9DP6qCaYt3xWLVerPMMgwlb5j1gvUDTQgsCLbRg3UwYLVM7I4LGugBagMV1T/ycdQFIF7ADqQuRziD0MzjEe+oCO8FhUO7uRMaHhnoBFqrCQAwLcVANiYpvjkHFqMcdq/1eIfTzHEg3Kz9bi25Ve8HRxc16723B1/MMw9ezLEDqpI6ImwY0HoIMaLxzJw2EzEHLYN65kwZC5qDlLlzXXZjf7TRPPaQY85Y67ObgvILja8Gr+aZFDb5lXs3sWeI3nSWgtJ+vzxKjZW6Y7EBpOt+yLjizZOfvsc4dye4chULIHDTz8C2LQg2THSgNjnVbe0fTSdeLW4am8XjEslKw2XaMNJ0LoDEjQWeZA8gcNNYk59wQQOYE1ufpMeq/Sy5y6qRTp0eMc3qWBXJmT4ag6WQApRNJX5+q+Rr6nl/XExMO2Wr9exBdAO2ej3TDmHKhqUMPmmLInqBE/fm8J6aYJ9Y0TGPduq9fY7CpF9yxMZPADLvO/gLTHKGnZwKvWRau7YZpr4JTBL1Wlqez7D8eA5BZ3RiOaejq3MxP1qJbrQrCo1sX+KyX/6dJupzJjYnY3LuFiLsuNg3ymqd2fYsBdnzDAC6upwTwtb0A48A0gHVa2OJ3hWxeLWkMvHrc9cZsMopMg/yAG0yfrQe8yrG5DvSKZ77uBH+wF17HNHiJ7gLthTcgpsEbnuslq9tthRYkTXsEAtC6aNjXskCXFHFjXQhhKWKdk+gpRRzuWdxkQxF7pKinWUMRE126x70l8iTLaYSeaV4wqMtT+mARu3yQnDTtJghAuwmCvkZEZuoCaPdzpCfT/VxUIHhxUQESFqtx2LKqANGr4zTL+CO4f4yMyxIDPQm3/9XKG6qugNmFXhE3qGWjLWfsXKfKKcHjrJe5jwuLW2sEKGwl9DIigZ4oHG0L2+6OqDC98Bi99QKzlpfBT9S6ZaHXkCcs79+xHnONEQbHPDw/KdNintOYEQZ9aiLU+Q99laM39Abc8PCklOmMU3kB7v+k+srXXXg0VD7/dKlO1Nc53SWnETblNELQ6k905joN0oUIdtFMvRLYT35rPSkOOYQAY/Nfgq4zWt/Y8yPPjkpuW4hqtS4d+KhWzyRmVAynxwBjVOJAqskaeH5cdMLtGpOlmC/1arItGFfX/T8lxnIz41zsGoSMzqe3fMTyI/4D&amp;lt;/diagram&amp;gt;&amp;lt;diagram name=&amp;quot;view 2&amp;quot; id=&amp;quot;czN1BJnVSdX-qBhCjg_X&amp;quot;&amp;gt;7Zxtc5s4EIB/DXN3nckNIF4/1nlp76aZS5ObaXNfOqqRDReMHCxqO7/+hHnX2k5wa0uhl3wIWoRsnl1WuysRDZ3PVu9SPA+vaUBizdSDlYYuNNM0kG7wP7lkXUg8zy0E0zQKyk6N4C56IqVQL6VZFJBFpyOjNGbRvCsc0yQhY9aR4TSly263CY27nzrHUwIEd2McQ+mnKGBhKTV0vTnxnkTTsPxozy5PzHDVuRQsQhzQZUuELjV0nlLKiqPZ6pzEObyKyzkLnvDjPw/v449//k2d6cfH6+uzYrCrPpfUt5CShP3Yoe1i6G84zkpetxknV9wvW1cQ+UhcX7wxWoYRI3dzPM7PLLnJcFnIZjFvGfwQL+aFEifRivAPHpXjk5SRlaCQZ+7GqBFz2yR0Rli65tdVozilViqzLJvLRsdWKQpb2q1kuLSqaT1wQ44flPB6gPQgSN5/N8eTgbK6nExdMigfgNJMJ+afOjrrg2sSxfE5jWm66Ykmdv7L5QuW0gfSOuNsfvIraMJa8uLnhBYqnbyBAPobzBhJk0Uf8gXhypeiLbqYEGc83qaLwPW/cgrHY4501Zi7gPl1lk9+MTmE/bG4mQI3ZMrmBt3EXZRMa2oqQLMkQjMIQau39w9/fD6bZO6Hh3dPX9wzHVIJeCxUNmnKQjqlCY4vG+kopVkS5Jg203fT5wOl81L4L2FsXQZ2OGO0O+OTVcQ+82P9d7ts3eet8vhi1W6sq0bCb7d1Ud68b59rLtu0quuAQ/H0qytdB07Jhu4+79dyPTmYA2yBw6VZOiZ7+tVBLk6nZN+AprvdulISYxZ96369bbayufRtmuJ1q8OcRglbtEa+yQWtWUmIB5AvRI1Cf8vc258fFN+gsdr6Vg5/+qu7hjNVn+c+wIuwtmwwR03MHXOU89WxnWPGBQJRy5Lsa/Pr5fkNo+01ah/ynN/oeI3Gibxmv4FO5Te+z1h2BpEDeDTrLFKZRxOGjwfQVjliF4Mo6ciRvgv5p4iFf81Jihmno0D8KSY7tiMbnbkPHc2YSvRs5ejBEtJNGs1wOfQAnnVXiHwc2UU7Q5cT+gw4/UH+C8OYwtxPnf6YQlHOsfenP661t/9x0h8Eix8HeAJVYyyRqGwnYFmAtkrzFBItVjovuGakoas+qNSv3YuJgCe7jmw5APqbYSEX7Vw+cph7aeZoWNAtSzHo9rbKX36LIVnwcCrQTP4gICOPZA6YEo+F0VbNdm1ou7c4me5b2D8ZLE813+pAm3vMKMuNTT4tRzlau7aM1A/mLZkQfs9jJazNVY6fA7GcMuX8UZXzXQkmTEW1I6ecTunsnk05iw0Qp045xUKT/8yKm4m+r3+1X+2oKaqzszDdaz+DojmqJTgNX/Z2CAfWBn/tw/kVRKLiUyIdOSzC/DYs5GLUKh25C5deqr2BOE6yGW9MWQ1kKGowDNHhS9cDDIg1e2jUdVs16uYW6hd7qPfdiv0KlIJc1ZQCtzvs26Y8QJXUL3IooxJYr+cTA57lrDtzRSF6bsYYosp81VS2ZcmgmtiT9TCndbFwY+iyd7a4cA3hl4Ex15VjDvPkgTF3HdWYezB87fcqlsp7aDxLOdzQuW/e2xwKcV89A4eOfKDv0NWRS8XekL1Lz4MO/WyYAYyhi7OpfPgeRCzrDafqzM/3hpP30i1+3g4DO/IWP9Fdd9dDQH8P+PdTLKB4sLzcL0hRbemkWn2SvT2tyn3/9xEyfYT/0rcgi+jx1D7CAImisd9J+CCbN07gJHyYyfQOrVXzE5XXFRatpbsNE6D+CdaeQDYpPcTzYcG90kNM8g0Gw1QEqKLIVwQMUB7IeknTXlHKsXiB6qp0XvWU0gI2w2wcDstQHdFjSPfchg5nSZqxecaGRV58e+6Y5Hmz+b9mRTTT/Hc4dPkf&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;defs /&gt;&lt;g&gt;&lt;path d=&quot;M 180 40 L 180 70 Q 180 80 170 80 L 70 80 Q 60 80 60 90 L 60 113.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 60 118.88 L 56.5 111.88 L 60 113.63 L 63.5 111.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 180 40 L 180 113.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 180 118.88 L 176.5 111.88 L 180 113.63 L 183.5 111.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 180 40 L 180 70 Q 180 80 190 80 L 310 80 Q 320 80 320 90 L 320 113.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 320 118.88 L 316.5 111.88 L 320 113.63 L 323.5 111.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;180&quot; cy=&quot;20&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;178.25&quot; y=&quot;22.25&quot;&gt;Rule&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 60 160 L 60 170 Q 60 180 50 180 L 30 180 Q 20 180 20 186.82 L 20 193.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 20 198.88 L 16.5 191.88 L 20 193.63 L 23.5 191.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 60 160 L 60 170 Q 60 180 70 180 L 90 180 Q 100 180 100 186.82 L 100 193.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 100 198.88 L 96.5 191.88 L 100 193.63 L 103.5 191.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;60&quot; cy=&quot;140&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;58.25&quot; y=&quot;142.25&quot;&gt;Rid&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;180&quot; cy=&quot;140&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;178.25&quot; y=&quot;142.25&quot;&gt;&amp;lt;-&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 320 160 L 320 190 Q 320 200 310 200 L 230 200 Q 220 200 220 210 L 220 233.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 220 238.88 L 216.5 231.88 L 220 233.63 L 223.5 231.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 320 160 L 320 190 Q 320 200 330 200 L 410 200 Q 420 200 420 210 L 420 233.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 420 238.88 L 416.5 231.88 L 420 233.63 L 423.5 231.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;313&quot; y=&quot;167&quot; width=&quot;13&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;318.75&quot; y=&quot;177.25&quot;&gt;or&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;320&quot; cy=&quot;140&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;319.5&quot; y=&quot;143.5&quot;&gt;Patterns&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 220 280 L 220 310 Q 220 320 210 320 L 150 320 Q 140 320 140 330 L 140 353.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 140 358.88 L 136.5 351.88 L 140 353.63 L 143.5 351.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 220 280 L 220 310 Q 220 320 230 320 L 290 320 Q 300 320 300 330 L 300 353.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 300 358.88 L 296.5 351.88 L 300 353.63 L 303.5 351.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;257&quot; y=&quot;318&quot; width=&quot;9&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;260.75&quot; y=&quot;327.75&quot;&gt;+&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;220&quot; cy=&quot;260&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;218.25&quot; y=&quot;262.25&quot;&gt;MultiplePatterns&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 420 280 L 420 353.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 420 358.88 L 416.5 351.88 L 420 353.63 L 423.5 351.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;420&quot; cy=&quot;260&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;418.25&quot; y=&quot;262.25&quot;&gt;SinglePattern&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;140&quot; cy=&quot;380&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;138.25&quot; y=&quot;382.25&quot;&gt;Pattern&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;300&quot; cy=&quot;380&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;298.25&quot; y=&quot;382.25&quot;&gt;Pattern&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 420 400 L 420 430 Q 420 440 410 440 L 330 440 Q 320 440 320 450 L 320 473.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 320 478.88 L 316.5 471.88 L 320 473.63 L 323.5 471.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 420 400 L 420 430 Q 420 440 430 440 L 510 440 Q 520 440 520 450 L 520 473.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 520 478.88 L 516.5 471.88 L 520 473.63 L 523.5 471.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;414&quot; y=&quot;412&quot; width=&quot;13&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;419.75&quot; y=&quot;422.25&quot;&gt;or&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;420&quot; cy=&quot;380&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;419.5&quot; y=&quot;383.5&quot;&gt;Pattern&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 320 520 L 320 550 Q 320 560 330 560 L 370 560 Q 380 560 380 570 L 380 593.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 380 598.88 L 376.5 591.88 L 380 593.63 L 383.5 591.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 320 520 L 320 550 Q 320 560 310 560 L 270 560 Q 260 560 260 570 L 260 593.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 260 598.88 L 256.5 591.88 L 260 593.63 L 263.5 591.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;320&quot; cy=&quot;500&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;318.25&quot; y=&quot;502.25&quot;&gt;PatternWithOperator&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 520 520 L 520 550 Q 520 560 530 560 L 730 560 Q 740 560 740 570 L 740 593.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 740 598.88 L 736.5 591.88 L 740 593.63 L 743.5 591.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;520&quot; cy=&quot;500&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;518.25&quot; y=&quot;502.25&quot;&gt;PatternWithoutOperator&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 740 640 L 740 670 Q 740 680 730 680 L 590 680 Q 580 680 580 690 L 580 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 580 718.88 L 576.5 711.88 L 580 713.63 L 583.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 740 640 L 740 670 Q 740 680 750 680 L 890 680 Q 900 680 900 690 L 900 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 900 718.88 L 896.5 711.88 L 900 713.63 L 903.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 740 640 L 740 670 Q 740 680 730 680 L 710 680 Q 700 680 700 690 L 700 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 700 718.88 L 696.5 711.88 L 700 713.63 L 703.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 740 640 L 740 670 Q 740 680 750 680 L 790 680 Q 800 680 800 690 L 800 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 800 718.88 L 796.5 711.88 L 800 713.63 L 803.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;734&quot; y=&quot;650&quot; width=&quot;13&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;739.75&quot; y=&quot;659.75&quot;&gt;or&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;740&quot; cy=&quot;620&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;739.5&quot; y=&quot;623.5&quot;&gt;Primary&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;260&quot; cy=&quot;620&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;258.25&quot; y=&quot;622.25&quot;&gt;Primary&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 380 640 L 380 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 380 718.88 L 376.5 711.88 L 380 713.63 L 383.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 380 640 L 380 670 Q 380 680 370 680 L 310 680 Q 300 680 300 690 L 300 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 300 718.88 L 296.5 711.88 L 300 713.63 L 303.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 380 640 L 380 670 Q 380 680 390 680 L 450 680 Q 460 680 460 690 L 460 713.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 460 718.88 L 456.5 711.88 L 460 713.63 L 463.5 711.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;377&quot; y=&quot;652&quot; width=&quot;13&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;382.75&quot; y=&quot;662.25&quot;&gt;or&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;380&quot; cy=&quot;620&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;378.25&quot; y=&quot;622.25&quot;&gt;Operator&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;300&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;298.25&quot; y=&quot;742.25&quot;&gt;?&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;380&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;378.25&quot; y=&quot;742.25&quot;&gt;*&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;460&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;458.25&quot; y=&quot;742.25&quot;&gt;+&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 580 760 L 580 790 Q 580 800 570 800 L 510 800 Q 500 800 500 810 L 500 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 500 838.88 L 496.5 831.88 L 500 833.63 L 503.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 580 760 L 580 790 Q 580 800 570 800 L 430 800 Q 420 800 420 810 L 420 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 420 838.88 L 416.5 831.88 L 420 833.63 L 423.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 580 760 L 580 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 580 838.88 L 576.5 831.88 L 580 833.63 L 583.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;580&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;578.25&quot; y=&quot;735.25&quot;&gt;Parenthesized&lt;/text&gt;&lt;text x=&quot;578.25&quot; y=&quot;749.25&quot;&gt;Primary&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 900 760 L 900 790 Q 900 800 910 800 L 1060 800 Q 1070 800 1070 810 L 1070 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 1070 838.88 L 1066.5 831.88 L 1070 833.63 L 1073.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 900 760 L 900 790 Q 900 800 910 800 L 1140 800 Q 1150 800 1150 810 L 1150 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 1150 838.88 L 1146.5 831.88 L 1150 833.63 L 1153.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 900 760 L 900 790 Q 900 800 910 800 L 1220 800 Q 1230 800 1230 810 L 1230 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 1230 838.88 L 1226.5 831.88 L 1230 833.63 L 1233.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 900 760 L 900 790 Q 900 800 910 800 L 1300 800 Q 1310 800 1310 810 L 1310 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 1310 838.88 L 1306.5 831.88 L 1310 833.63 L 1313.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 900 760 L 900 790 Q 900 800 910 800 L 1380 800 Q 1390 800 1390 810 L 1390 833.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 1390 838.88 L 1386.5 831.88 L 1390 833.63 L 1393.5 831.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;900&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;898.25&quot; y=&quot;742.25&quot;&gt;Range&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 700 760 L 700 850 Q 700 860 690 860 L 630 860 Q 620 860 620 870 L 620 953.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 620 958.88 L 616.5 951.88 L 620 953.63 L 623.5 951.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 700 760 L 700 953.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 700 958.88 L 696.5 951.88 L 700 953.63 L 703.5 951.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 700 760 L 700 850 Q 700 860 710 860 L 770 860 Q 780 860 780 870 L 780 953.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 780 958.88 L 776.5 951.88 L 780 953.63 L 783.5 951.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;700&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;698.25&quot; y=&quot;742.25&quot;&gt;quoted&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 800 760 L 800 850 Q 800 860 810 860 L 850 860 Q 860 860 860 870 L 860 953.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 860 958.88 L 856.5 951.88 L 860 953.63 L 863.5 951.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 800 760 L 800 850 Q 800 860 810 860 L 970 860 Q 980 860 980 870 L 980 953.63&quot; fill=&quot;none&quot; stroke=&quot;#b85450&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 980 958.88 L 976.5 951.88 L 980 953.63 L 983.5 951.88 Z&quot; fill=&quot;#b85450&quot; stroke=&quot;#b85450&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;971&quot; y=&quot;912&quot; width=&quot;19&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;979.75&quot; y=&quot;922.25&quot;&gt;not&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;800&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;798.25&quot; y=&quot;735.25&quot;&gt;Rule&lt;/text&gt;&lt;text x=&quot;798.25&quot; y=&quot;749.25&quot;&gt;Reference&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;500&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;498.25&quot; y=&quot;862.25&quot;&gt;Patterns&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;420&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;418.25&quot; y=&quot;862.25&quot;&gt;(&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;580&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;578.25&quot; y=&quot;862.25&quot;&gt;)&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1150&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1148.25&quot; y=&quot;862.25&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1070&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1068.25&quot; y=&quot;862.25&quot;&gt;[&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1390&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1388.25&quot; y=&quot;862.25&quot;&gt;]&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1230&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1228.25&quot; y=&quot;862.25&quot;&gt;-&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1310&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1308.25&quot; y=&quot;862.25&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;700&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;698.25&quot; y=&quot;982.25&quot;&gt;&amp;lt;any&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;620&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;618.25&quot; y=&quot;982.25&quot;&gt;'&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;780&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;778.25&quot; y=&quot;982.25&quot;&gt;'&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 860 1000 L 860 1030 Q 860 1040 850 1040 L 790 1040 Q 780 1040 780 1050 L 780 1073.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 780 1078.88 L 776.5 1071.88 L 780 1073.63 L 783.5 1071.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 860 1000 L 860 1030 Q 860 1040 850 1040 L 710 1040 Q 700 1040 700 1050 L 700 1073.63&quot; fill=&quot;none&quot; stroke=&quot;#b85450&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 700 1078.88 L 696.5 1071.88 L 700 1073.63 L 703.5 1071.88 Z&quot; fill=&quot;#b85450&quot; stroke=&quot;#b85450&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;717&quot; y=&quot;1034&quot; width=&quot;19&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;725.75&quot; y=&quot;1043.75&quot;&gt;not&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;860&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;859.5&quot; y=&quot;983.5&quot;&gt;id&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 980 1000 L 980 1030 Q 980 1040 970 1040 L 950 1040 Q 940 1040 940 1050 L 940 1073.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 940 1078.88 L 936.5 1071.88 L 940 1073.63 L 943.5 1071.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 980 1000 L 980 1030 Q 980 1040 990 1040 L 1010 1040 Q 1020 1040 1020 1050 L 1020 1073.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 1020 1078.88 L 1016.5 1071.88 L 1020 1073.63 L 1023.5 1071.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;977&quot; y=&quot;1015&quot; width=&quot;13&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;982.75&quot; y=&quot;1024.75&quot;&gt;or&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;980&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;979.5&quot; y=&quot;983.5&quot;&gt;arrow&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;940&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;938.25&quot; y=&quot;1102.25&quot;&gt;&amp;lt;-&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1020&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1018.25&quot; y=&quot;1102.25&quot;&gt;-&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;20&quot; cy=&quot;220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;18.25&quot; y=&quot;222.25&quot;&gt;id&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;100&quot; cy=&quot;220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;98.25&quot; y=&quot;222.25&quot;&gt;arrow&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;860&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;858.25&quot; y=&quot;1102.25&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;780&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;778.25&quot; y=&quot;1102.25&quot;&gt;&amp;lt;letter&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 860 1000 L 860 1073.63&quot; fill=&quot;none&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 860 1078.88 L 856.5 1071.88 L 860 1073.63 L 863.5 1071.88 Z&quot; fill=&quot;#000000&quot; stroke=&quot;#000000&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;858&quot; y=&quot;1054&quot; width=&quot;7&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;860.75&quot; y=&quot;1064.25&quot;&gt;*&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 700 1120 L 700 1150 Q 700 1160 690 1160 L 670 1160 Q 660 1160 660 1170 L 660 1193.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 660 1198.88 L 656.5 1191.88 L 660 1193.63 L 663.5 1191.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;path d=&quot;M 700 1120 L 700 1150 Q 700 1160 710 1160 L 730 1160 Q 740 1160 740 1170 L 740 1193.63&quot; fill=&quot;none&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 740 1198.88 L 736.5 1191.88 L 740 1193.63 L 743.5 1191.88 Z&quot; fill=&quot;#c73500&quot; stroke=&quot;#c73500&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#FF0000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;rect fill=&quot;#ffffff&quot; stroke=&quot;none&quot; x=&quot;695&quot; y=&quot;1130&quot; width=&quot;13&quot; height=&quot;15&quot; stroke-width=&quot;0&quot; /&gt;&lt;text x=&quot;700.75&quot; y=&quot;1139.75&quot;&gt;or&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;700&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;698.25&quot; y=&quot;1102.25&quot;&gt;keyword&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;660&quot; cy=&quot;1220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;658.25&quot; y=&quot;1222.25&quot;&gt;match&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;740&quot; cy=&quot;1220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;738.25&quot; y=&quot;1222.25&quot;&gt;output&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;
&lt;h1 id=&quot;ast1-view-2&quot;&gt;AST1 View 2&lt;/h1&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; version=&quot;1.1&quot; width=&quot;1411px&quot; height=&quot;1241px&quot; viewBox=&quot;-0.5 -0.5 1411 1241&quot; content=&quot;&amp;lt;mxfile host=&amp;quot;Electron&amp;quot; modified=&amp;quot;2021-07-14T12:54:57.970Z&amp;quot; agent=&amp;quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.4.2 Chrome/78.0.3904.130 Electron/7.1.4 Safari/537.36&amp;quot; etag=&amp;quot;dCyr2azHSaKozGGu7Q-h&amp;quot; version=&amp;quot;12.4.2&amp;quot; type=&amp;quot;device&amp;quot; pages=&amp;quot;2&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;yf0gERGoFfMX_B7MOgHz&amp;quot; name=&amp;quot;view 1&amp;quot;&amp;gt;7V1tc6M2EP41nr7M5AYkEPCxSS5t55r25jLT630ktmzTw8jFcpzcr6+whWOQndAUs8tL7sMZATY8u9qXZxcxoleLx5/TcDm/FRMej4g1eRzR6xEhtu9Q9V828qRHiOvtRmZpNNFjzwN30TeuBy09uo4mfFU4UAoRy2hZHByLJOFjWRgL01RsiodNRVz81WU448bA3TiMzdHP0UTO9ahtWc87fuHRbK5/2nf1jkWYH6wHVvNwIjYHQ/T9iF6lQsjdp8XjFY8z9HJcdufdnNi7v7CUJ7LKCSy4vfnw6cOvm9+XNw/OHXd/u/jzwtXXJp/yG+YTdf96U6RyLmYiCeP3z6OXz6O/CbFUh9lq8G8u5ZMWX7iWQg3N5SLWe/ljJP9Sn613rt76crDnOlMXK994yjcSmT4dnJRtfjnc93zadis/LxXrZMIn+vunURxfiVik27uj0+mUjMdqfCVT8ZUf7LG2f2rPDpEMhpNA66GVWKdj/gK6ucKG6YzLF44je3VQE4mLBVf3o85LeRzK6KF4HaFW6Nn+uGeZqw9a7P9BBdgbVKCIMXKFaIUKUEgV8EBU4I3ifIvqtEIFHEgV0N/7EMZr/Uuf1krOhl7EsfK8mfw380jyu2W4vfWN8v5F6Yar5c4dT6PHTEs0oA88lfzxZUhNCPITmHalOpjw9ebm2TE7emh+4JLzsfqnTWtMZyN6TirquQeq6B6MsWvQ3+EStgspbGJaNXU8KqPmFG0asYCNGjUgGxEWLjIkYvXblxc1wld2y27275gGs+1fdoZI5MH47u883gVcEnkK3F1LVZZ/yHzrqAW78qhbtwVzKlowHzQsswcdQKADAagOWKZNVqCU9UJZPlmyt3E0S9TnscKFKxQvM/sYjcP4J71jEU0mO43hq+hbeL/9qgzipYgSub0P93LkXmegK/Mf3vP4Mhx/nW0VrJhPqT/TPN/cFAKPI+ZZ03b6p0d7suxQmC9MjJPG/MJ657t2UDDoeTRQWWr62z9mYBwcIqbTldKWslj3F/F2STuGnD+GUokuWdXodHcTKycza3Ke1MLmPN/CbLbKcNZoBv2KZtAGJSrt1qTbbRIpKPGYMziFbOMSpWs7gwtjL5pU651lE7fowSh2D+Yb8rxdZ8W6mJ/Bk9Xgt0jJb1EC7bc6T0/VaOSCqkYOlHEMjDlxFyWz/YzANSEcdBPC5PDqB24Srub7+VMDijYpoug40CiaKSR+FPcFHiwoks4zcqdZl1M8TY3m3K5Kx9ignBzpPCfXEi0AZuXM3KX3rNwrBj1j5QoWPW87wJvQ2Cc5uRod51kouXIkB+89O8/fNNNOVJXaIaBZD+l8IotM2qBEnm0SP9pMfo7k/I8lT0N5xDuCprrlmoXLoA1k52sWzUyZqrQQgS1nmLzQwZQRa4lz1rjYZg31ezdrmkzHCKk4myhouEGDQQtQaAFov6czEHQ4tOBEabMhLRgIOhxa4IHGV5ZZOeo9Qee8StB5gdU2jo6Ygv6YRotQKxFijs4r1QkZ9CNN5EidsHYoa68TOshQpK1xQLCOpGqlh4BWeihpizTbGU5U1gLQqi+lgxZg0AJqQWpBYJJ2vY8p6YnKw0FM6RX7WAn6iNKs+uJkYylDFvoQsxA0ojc1gobqmdFyh5oP/dgLMe3Tj10Fv6z74ODTak8zdAR+x0EGv9OaCK2RMiitGlE5BDKicoauoGalDVqmc4auoGalDVqOo8eaJ7O7nWdJjpIoYds1Re5VVM1m2af6ycYaPJ2LLdBwW+PpcM8it+osAuUfXact0kYmNVC+0G1NMx8uqbknbHFDUhui0WalDZp7uK2JRpFJDZSDzy/zcFW/MJkhW6zUx0YNstYUpXGbNlZ1koAGjYwM0m5U2qDBJhsSwkalzWAdIDMc4D9rITM+BZMHZOg8YGvCPdyzxKs6S0DJR9a/54LufddxjzXs+GO+fd8BiBaAPgsQmLYyEdLQjH517LATwYr++qxhh5CC7cbfBJ7ro/EGi3KJ4ROfcoXPGFm+6GHzlg4xAD3DGn5194I7JRgD6PXLHLMG9n2N+OFqCbGwgW9SRT90FfxylRIe/COtgIVXSYRxsl7sh7bGuavCsW2KTTpmp2AWr3QVf8tFhn9+PQX8rzuLP/Ww4W8b+Hf31Tb716miQd8MLvvrG0iATTqveu7kqR+yKXOYtgW9ip5r+u3vOou+hQ19ZnrtzqLvMWzo+0OZqw7qllXt8/BAS9h+/8o1TRL4lbXAhyXwTQpnIPD9Eyvr7Al8h+XFztYQ+MwUdK3vaj3LAi6+g81HeqR3VrPJdQpY1RYRD7RFxOtfpIRTC0C72QMzj+/9ahXeq6tVMD9f66Uty1Uws8khTFOxwe49A3QZpmfm9z15/fmedMxlYUMv7OwdZej7wDraVpn4gheG2cZQa3ReWx9IbrOhF8LxzHSmbptcd+9MieuGh3BoIDidaMJbhCMNBAXpxDzrFuuHeAyuHFw8/vC4V7NcOegDQD4xJqO57heGRO/kXHs7F/ryzFQJnVV6i/b/pEKL1507S1I8/3zJXtC/id0kteNXpXZ80OJYMNC8KLQggF2O1nzoofcE325mvOQPPJoTfHgpPd+k9L7yp41I60y6awh8jQYp+MDXzEsWoRzPa8QNVerBypkheN6etzMeWqW1XK7Nqn1HRFB+jcc5RaA2UyHkobVRaM1vxYRnR/wL&amp;lt;/diagram&amp;gt;&amp;lt;diagram name=&amp;quot;view 2&amp;quot; id=&amp;quot;czN1BJnVSdX-qBhCjg_X&amp;quot;&amp;gt;7Zxtc5s4EIB/DXN3nckNIF4/1nlp76aZS5ObaXNfOqqRDReMHCxqO7/+hHnX2k5wa0uhl3wIWoRsnl1WuysRDZ3PVu9SPA+vaUBizdSDlYYuNNM0kG7wP7lkXUg8zy0E0zQKyk6N4C56IqVQL6VZFJBFpyOjNGbRvCsc0yQhY9aR4TSly263CY27nzrHUwIEd2McQ+mnKGBhKTV0vTnxnkTTsPxozy5PzHDVuRQsQhzQZUuELjV0nlLKiqPZ6pzEObyKyzkLnvDjPw/v449//k2d6cfH6+uzYrCrPpfUt5CShP3Yoe1i6G84zkpetxknV9wvW1cQ+UhcX7wxWoYRI3dzPM7PLLnJcFnIZjFvGfwQL+aFEifRivAPHpXjk5SRlaCQZ+7GqBFz2yR0Rli65tdVozilViqzLJvLRsdWKQpb2q1kuLSqaT1wQ44flPB6gPQgSN5/N8eTgbK6nExdMigfgNJMJ+afOjrrg2sSxfE5jWm66Ykmdv7L5QuW0gfSOuNsfvIraMJa8uLnhBYqnbyBAPobzBhJk0Uf8gXhypeiLbqYEGc83qaLwPW/cgrHY4501Zi7gPl1lk9+MTmE/bG4mQI3ZMrmBt3EXZRMa2oqQLMkQjMIQau39w9/fD6bZO6Hh3dPX9wzHVIJeCxUNmnKQjqlCY4vG+kopVkS5Jg203fT5wOl81L4L2FsXQZ2OGO0O+OTVcQ+82P9d7ts3eet8vhi1W6sq0bCb7d1Ud68b59rLtu0quuAQ/H0qytdB07Jhu4+79dyPTmYA2yBw6VZOiZ7+tVBLk6nZN+AprvdulISYxZ96369bbayufRtmuJ1q8OcRglbtEa+yQWtWUmIB5AvRI1Cf8vc258fFN+gsdr6Vg5/+qu7hjNVn+c+wIuwtmwwR03MHXOU89WxnWPGBQJRy5Lsa/Pr5fkNo+01ah/ynN/oeI3Gibxmv4FO5Te+z1h2BpEDeDTrLFKZRxOGjwfQVjliF4Mo6ciRvgv5p4iFf81Jihmno0D8KSY7tiMbnbkPHc2YSvRs5ejBEtJNGs1wOfQAnnVXiHwc2UU7Q5cT+gw4/UH+C8OYwtxPnf6YQlHOsfenP661t/9x0h8Eix8HeAJVYyyRqGwnYFmAtkrzFBItVjovuGakoas+qNSv3YuJgCe7jmw5APqbYSEX7Vw+cph7aeZoWNAtSzHo9rbKX36LIVnwcCrQTP4gICOPZA6YEo+F0VbNdm1ou7c4me5b2D8ZLE813+pAm3vMKMuNTT4tRzlau7aM1A/mLZkQfs9jJazNVY6fA7GcMuX8UZXzXQkmTEW1I6ecTunsnk05iw0Qp045xUKT/8yKm4m+r3+1X+2oKaqzszDdaz+DojmqJTgNX/Z2CAfWBn/tw/kVRKLiUyIdOSzC/DYs5GLUKh25C5deqr2BOE6yGW9MWQ1kKGowDNHhS9cDDIg1e2jUdVs16uYW6hd7qPfdiv0KlIJc1ZQCtzvs26Y8QJXUL3IooxJYr+cTA57lrDtzRSF6bsYYosp81VS2ZcmgmtiT9TCndbFwY+iyd7a4cA3hl4Ex15VjDvPkgTF3HdWYezB87fcqlsp7aDxLOdzQuW/e2xwKcV89A4eOfKDv0NWRS8XekL1Lz4MO/WyYAYyhi7OpfPgeRCzrDafqzM/3hpP30i1+3g4DO/IWP9Fdd9dDQH8P+PdTLKB4sLzcL0hRbemkWn2SvT2tyn3/9xEyfYT/0rcgi+jx1D7CAImisd9J+CCbN07gJHyYyfQOrVXzE5XXFRatpbsNE6D+CdaeQDYpPcTzYcG90kNM8g0Gw1QEqKLIVwQMUB7IeknTXlHKsXiB6qp0XvWU0gI2w2wcDstQHdFjSPfchg5nSZqxecaGRV58e+6Y5Hmz+b9mRTTT/Hc4dPkf&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;defs /&gt;&lt;g&gt;&lt;ellipse cx=&quot;180&quot; cy=&quot;20&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(166.5,12.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;25&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 25px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;Rule&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;13&quot; y=&quot;12&quot; fill=&quot;#000000&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;Rule&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;60&quot; cy=&quot;140&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;58.91&quot; y=&quot;142.91&quot;&gt;Rid&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;180&quot; cy=&quot;140&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;178.91&quot; y=&quot;142.91&quot;&gt;&amp;lt;-&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;320&quot; cy=&quot;140&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffe6cc&quot; stroke=&quot;#d79b00&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;318.91&quot; y=&quot;142.91&quot;&gt;Patterns&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;220&quot; cy=&quot;260&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;218.91&quot; y=&quot;262.91&quot;&gt;MultiplePatterns&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;420&quot; cy=&quot;260&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;418.91&quot; y=&quot;262.91&quot;&gt;SinglePattern&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 140.18 360.06 L 140.18 319.47 Q 140.18 309.47 150.18 309.47 L 410.18 309.47 Q 420.18 309.47 420.18 319.47 L 420.18 346.22&quot; fill=&quot;none&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 420.18 354.47 L 414.68 343.47 L 420.18 346.22 L 425.68 343.47 Z&quot; fill=&quot;#80ff00&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;140&quot; cy=&quot;380&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;138.91&quot; y=&quot;382.91&quot;&gt;Pattern&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 320.18 380.06 L 386.34 380.06&quot; fill=&quot;none&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 394.59 380.06 L 383.59 385.56 L 386.34 380.06 L 383.59 374.56 Z&quot; fill=&quot;#80ff00&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;300&quot; cy=&quot;380&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;298.91&quot; y=&quot;382.91&quot;&gt;Pattern&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;420&quot; cy=&quot;380&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffe6cc&quot; stroke=&quot;#d79b00&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;418.91&quot; y=&quot;382.91&quot;&gt;Pattern&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;320&quot; cy=&quot;500&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;318.91&quot; y=&quot;502.91&quot;&gt;PatternWithOperator&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;520&quot; cy=&quot;500&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;518.91&quot; y=&quot;502.91&quot;&gt;PatternWithoutOperator&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;740&quot; cy=&quot;620&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffe6cc&quot; stroke=&quot;#d79b00&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;738.91&quot; y=&quot;622.91&quot;&gt;Primary&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 260 600 L 260.12 579.47 Q 260.18 569.47 270.18 569.47 L 730.18 569.47 Q 740.18 569.47 740.18 577.84 L 740.18 586.22&quot; fill=&quot;none&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 740.18 594.47 L 734.68 583.47 L 740.18 586.22 L 745.68 583.47 Z&quot; fill=&quot;#80ff00&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;260&quot; cy=&quot;620&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;258.91&quot; y=&quot;622.91&quot;&gt;Primary&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;380&quot; cy=&quot;620&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;378.91&quot; y=&quot;622.91&quot;&gt;Operator&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;300&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;298.91&quot; y=&quot;742.91&quot;&gt;?&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;380&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;378.91&quot; y=&quot;742.91&quot;&gt;*&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;460&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;458.91&quot; y=&quot;742.91&quot;&gt;+&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;580&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;578.91&quot; y=&quot;735.91&quot;&gt;Parenthesized&lt;/text&gt;&lt;text x=&quot;578.91&quot; y=&quot;749.91&quot;&gt;Primary&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;900&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;898.91&quot; y=&quot;742.91&quot;&gt;Range&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;700&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;698.91&quot; y=&quot;742.91&quot;&gt;quoted&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;800&quot; cy=&quot;740&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;798.91&quot; y=&quot;735.91&quot;&gt;Rule&lt;/text&gt;&lt;text x=&quot;798.91&quot; y=&quot;749.91&quot;&gt;Reference&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 500 880 L 500.12 899.47 Q 500.18 909.47 490.18 909.47 L 239.59 909.47 Q 229.59 909.47 229.59 899.47 L 229.59 150.06 Q 229.59 140.06 239.59 140.06 L 286.34 140.06&quot; fill=&quot;none&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 294.59 140.06 L 283.59 145.56 L 286.34 140.06 L 283.59 134.56 Z&quot; fill=&quot;#80ff00&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;500&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;498.91&quot; y=&quot;862.91&quot;&gt;Patterns&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;420&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;418.91&quot; y=&quot;862.91&quot;&gt;(&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;580&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;578.91&quot; y=&quot;862.91&quot;&gt;)&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1150&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1148.91&quot; y=&quot;862.91&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1070&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1068.91&quot; y=&quot;862.91&quot;&gt;[&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1390&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(1387.5,852.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;3&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; vertical-align: top; width: 5px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;]&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;2&quot; y=&quot;12&quot; fill=&quot;#333333&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1230&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(1226.5,852.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;4&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; vertical-align: top; width: 5px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;-&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;2&quot; y=&quot;12&quot; fill=&quot;#333333&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;-&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1310&quot; cy=&quot;860&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g transform=&quot;translate(1285.5,852.5)&quot;&gt;&lt;switch&gt;&lt;foreignObject style=&quot;overflow:visible;&quot; pointer-events=&quot;all&quot; width=&quot;46&quot; height=&quot;12&quot; requiredFeatures=&quot;http://www.w3.org/TR/SVG11/feature#Extensibility&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; vertical-align: top; width: 48px; white-space: nowrap; overflow-wrap: normal; text-align: center;&quot;&gt;&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&quot;23&quot; y=&quot;12&quot; fill=&quot;#333333&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot; font-family=&quot;Helvetica&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;ellipse cx=&quot;700&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;698.91&quot; y=&quot;982.91&quot;&gt;&amp;lt;any&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;620&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;618.91&quot; y=&quot;982.91&quot;&gt;'&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;780&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;778.91&quot; y=&quot;982.91&quot;&gt;'&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;860&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffe6cc&quot; stroke=&quot;#d79b00&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;858.91&quot; y=&quot;982.91&quot;&gt;id&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;980&quot; cy=&quot;980&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffe6cc&quot; stroke=&quot;#d79b00&quot; stroke-width=&quot;3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;978.91&quot; y=&quot;982.91&quot;&gt;arrow&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;940&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;938.91&quot; y=&quot;1102.91&quot;&gt;&amp;lt;-&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;1020&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;1018.91&quot; y=&quot;1102.91&quot;&gt;-&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 20.18 240.06 L 20.18 930.06 Q 20.18 940.06 30.18 940.06 L 850.18 940.06 Q 860.18 940.06 860.18 943.14 L 860.18 946.22&quot; fill=&quot;none&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 860.18 954.47 L 854.68 943.47 L 860.18 946.22 L 865.68 943.47 Z&quot; fill=&quot;#80ff00&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;20&quot; cy=&quot;220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;18.91&quot; y=&quot;222.91&quot;&gt;id&lt;/text&gt;&lt;/g&gt;&lt;path d=&quot;M 100.18 240.06 L 100.18 919.47 Q 100.18 929.47 110.18 929.47 L 970.18 929.47 Q 980.18 929.47 980.18 937.84 L 980.18 946.22&quot; fill=&quot;none&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;stroke&quot; /&gt;&lt;path d=&quot;M 980.18 954.47 L 974.68 943.47 L 980.18 946.22 L 985.68 943.47 Z&quot; fill=&quot;#80ff00&quot; stroke=&quot;#80ff00&quot; stroke-width=&quot;5&quot; stroke-miterlimit=&quot;10&quot; pointer-events=&quot;all&quot; /&gt;&lt;ellipse cx=&quot;100&quot; cy=&quot;220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#fff2cc&quot; stroke=&quot;#d6b656&quot; stroke-dasharray=&quot;3 3&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;98.91&quot; y=&quot;222.91&quot;&gt;arrow&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;860&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;858.91&quot; y=&quot;1102.91&quot;&gt;&amp;lt;alnum&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;780&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;778.91&quot; y=&quot;1102.91&quot;&gt;&amp;lt;letter&amp;gt;&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;700&quot; cy=&quot;1100&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#ffffff&quot; stroke=&quot;#000000&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#000000&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;698.91&quot; y=&quot;1102.91&quot;&gt;keyword&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;660&quot; cy=&quot;1220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;658.91&quot; y=&quot;1222.91&quot;&gt;match&lt;/text&gt;&lt;/g&gt;&lt;ellipse cx=&quot;740&quot; cy=&quot;1220&quot; rx=&quot;20&quot; ry=&quot;20&quot; fill=&quot;#f5f5f5&quot; stroke=&quot;#666666&quot; pointer-events=&quot;all&quot; /&gt;&lt;g fill=&quot;#333333&quot; font-family=&quot;Helvetica&quot; text-anchor=&quot;middle&quot; font-size=&quot;12px&quot;&gt;&lt;text x=&quot;738.91&quot; y=&quot;1222.91&quot;&gt;output&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;

&lt;h1 id=&quot;constructs&quot;&gt;Constructs&lt;/h1&gt;
&lt;h2 id=&quot;nodes&quot;&gt;Nodes&lt;/h2&gt;
&lt;p&gt;A list of the Node kinds follows:&lt;br /&gt;
	- constant (aka terminal) (gray circle)&lt;br /&gt;
	- compound (aka non-terminal) (empty circle)&lt;br /&gt;
	- compound node &lt;em&gt;reference&lt;/em&gt;: node referring to another compound node (dotted circle)&lt;br /&gt;
	- compound node &lt;em&gt;target&lt;/em&gt;: node that is the target (referenced) from another node(s) (circle with 3pt outline, “come-from”)&lt;/p&gt;

&lt;h2 id=&quot;connectors&quot;&gt;Connectors&lt;/h2&gt;
&lt;p&gt;A list of the connector kinds follows:&lt;br /&gt;
	- AND (black arrow)&lt;br /&gt;
	- OR (red arrow labelled “or”)&lt;br /&gt;
	- NOT (red arrow labelled “not”)&lt;br /&gt;
    - one-or-more (black arrow labelled “+”)&lt;br /&gt;
    - zero-or-more (black arrow labelled “*” (not shown))&lt;br /&gt;
    - optional (black arrow labelled “?” (not shown))&lt;/p&gt;

&lt;h1 id=&quot;discussion&quot;&gt;Discussion&lt;/h1&gt;
&lt;h2 id=&quot;view-1&quot;&gt;View 1&lt;/h2&gt;
&lt;p&gt;There are two kinds of nodes that do not appear, explicitly, in the grammar:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;reference&lt;/li&gt;
  &lt;li&gt;target.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Given these two kinds of nodes, it should be possible to implement DRY&lt;sup id=&quot;fnref:dry&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:dry&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; automation, putting less onus on &lt;br /&gt;
the programmer(s) to create DRY explicitly.&lt;/p&gt;

&lt;h3 id=&quot;relationship-to-text-only-languages&quot;&gt;Relationship to Text-only Languages&lt;/h3&gt;

&lt;p&gt;Text-only technologies (like OOP and FP) put the onus on the programmer to implement DRY explicitly.&lt;/p&gt;

&lt;p&gt;I suggest that it may be possible to automate at least some of the DRY work by supplying at least two more constructs in text-based languages:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reference&lt;/li&gt;
  &lt;li&gt;Target.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;view-2&quot;&gt;View 2&lt;/h2&gt;
&lt;p&gt;View 2 shows the links from reference nodes to target nodes.&lt;/p&gt;

&lt;p&gt;This view shows a rats-nest of connections.&lt;/p&gt;

&lt;p&gt;This view is not obvious from the text representation of the graph, but is immediately obvious in the drawing.&lt;/p&gt;

&lt;p&gt;This view shows that that various grammar rules depend on other grammar rules.  The implication is that the grammar must be treated as a single unit. This is not a surprise, because one tends to think of a grammar specification as a whole.&lt;/p&gt;

&lt;p&gt;Grammars that contain inter-dependencies cannot be composed from smaller pieces.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io&quot;&gt;Blog&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guitarvydas.github.io/2021/01/14/References.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:dry&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;DRY means Don’t Repeat Yourself.  DRY is a maintenance-engineering issue. &lt;a href=&quot;#fnref:dry&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">I created a grammar and drew a diagram of the AST.</summary></entry><entry><title type="html">Grok Workbench</title><link href="https://computingsimplicity.neocities.org/2021/07/12/Grok-Workbench.html" rel="alternate" type="text/html" title="Grok Workbench" /><published>2021-07-12T00:00:00-04:00</published><updated>2021-07-12T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/12/Grok%20Workbench</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/12/Grok-Workbench.html">&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io/assets/2021-07-12-Grok Workbench/index.html&quot;&gt;Grok Workbench&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;</content><author><name></name></author><summary type="html">Grok Workbench</summary></entry><entry><title type="html">Transpilation</title><link href="https://computingsimplicity.neocities.org/2021/07/12/Transpilation.html" rel="alternate" type="text/html" title="Transpilation" /><published>2021-07-12T00:00:00-04:00</published><updated>2021-07-12T00:00:00-04:00</updated><id>https://computingsimplicity.neocities.org/2021/07/12/Transpilation</id><content type="html" xml:base="https://computingsimplicity.neocities.org/2021/07/12/Transpilation.html">&lt;p&gt;&lt;a href=&quot;https://guitarvydas.github.io/assets/2012-07-12-Transpilation/index.html&quot;&gt;Transpilation&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://utteranc.es/client.js&quot; repo=&quot;guitarvydas/guitarvydas.github.io&quot; issue-term=&quot;pathname&quot; theme=&quot;github-light&quot; crossorigin=&quot;anonymous&quot; async=&quot;&quot;&gt; 
&lt;/script&gt;</content><author><name></name></author><summary type="html">Transpilation</summary></entry></feed>