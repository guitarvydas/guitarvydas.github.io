I"><p>Refactoring is accidental complexity.</p>

<p>Accidental complexity is also known as “epicycles”<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">1</a></sup>.</p>

<p>The need to refactor a design or to refactor code, should be a red flag.</p>

<p>Refactoring should never be needed in a design which has been decomposed into its most-atomic units[^2].  <br />
[^2]: Note that I believe that <em>code</em> should be machine-readable.  <em>Designs</em> are meant to be human readable.  Refactoring should be reserved for <em>designs</em> only.  Good designs, don’t need to be refactored.  Structure should only be applied to designs, not code.  [At present, all designs are baked into code by virtue of the kinds of languages we use.  If you find a need to refactor code, then split the code into 2 parts - design and code - first.]</p>

<p>Refactoring is accidental complexity caused by too much structure in a design.</p>

<p>Structure can be added in by creating queries.</p>

<p>Structure should not be baked into a factbase.</p>

<p>[Structure in queries is OK, structure in factbases is bad].</p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>See Copernican vs. Ptolemaic Cosmology.  See Arthur Koestler’s “The Sleepwalkers”. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET