I"˙<p>ASC means Asynchronous Software Component.</p>

<p>Functions are not ASCs.</p>

<p>Functions rely on other - synchronous - functions (and libraries).</p>

<p>The smallest unit of componentization in current PLs[^1] is the <em>thread</em>.</p>

<p><em>Threads</em> typically imply the use of <em>operating systems</em>[^4].</p>

<p>It should be possible to implement ‚Äúbetter‚Äù (smaller, faster) components using <em>messages</em> and <em>closures</em>[^2].</p>

<p>The main issue is how to structure message-sending components to avoid spaghetti designs.[^3]</p>

<p>[^1:] PL means Programming Language.</p>

<p>[^2:] Operating system processes - threads - are ad-hoc implementations of closures.</p>

<p>[^3:] The answer to how to create systems of structured components, is, as always, to use hierarchy and scoping.</p>

<p>[^4:] Operating systems are not needed.</p>
<h1 id="see-also">See Also</h1>

<p><a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a><br />
<a href="https://guitarvydas.github.io/2021/05/14/Table-Of-Contents.html">Table of Contents</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

:ET