I"Í	<p>Programming language Readability is of, at least, two layers:</p>
<ol>
  <li>Human Readability</li>
  <li>Machine Readability.</li>
</ol>

<p>To date, programming language designers have been emphasizing human readable syntaxes.</p>

<p>To date, we think of programming to consist of only 2 layers:</p>
<ul>
  <li>machine code (assembler, etc.)</li>
  <li>human-readable PLs.</li>
</ul>

<p>Machine readable languages enable automatic manipulation of source code.</p>

<p>Machine readable languages enable layering, e.g. allowing more than 2 layers for software designs.</p>

<p>Human-readable languages can be automated using parsers. (REGEXP is a subset of parsing).</p>

<p>The belief that only 2 layers are possible, leads to:</p>
<ul>
  <li>the belief that PLs can be designed and implemented by only a select few (interpreter and compiler people)</li>
  <li>the belief that PL technology is split into only 2 parts - compile-time and run-time</li>
  <li>mixing implementation details with DI (Architectural) details</li>
  <li>an uneven blend of DI vs. Implementation details in a language (depends on the language designer). For example, data abstraction is a DI concern, whereas low-level operations, like ‚Äú+‚Äù, are implementation details.<sup id="fnref:user" role="doc-noteref"><a href="#fn:user" class="footnote">1</a></sup></li>
</ul>

<h1 id="human-readable">Human Readable</h1>
<p>Basically, any language that ‚Äúhas syntax‚Äù is meant for human consumption.</p>

<p>Syntax is a way to error-check programs written by humans.</p>

<p>Examples:</p>
<ul>
  <li>Pascal</li>
  <li>Python</li>
  <li>HTML</li>
  <li>spreadsheets</li>
</ul>

<h1 id="machine-readable">Machine Readable</h1>
<p>Examples:</p>
<ul>
  <li>assembler</li>
  <li>bash, *sh</li>
  <li>CL (Common Lisp)</li>
  <li>JS (JS is schizophrenic - it contains syntax, but also contains machine-level concepts)</li>
</ul>

<h1 id="see-also">See Also</h1>

<p><a href="https://guitarvydas.github.io">Blog</a><br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:user" role="doc-endnote">
      <p>Note that user-defined data structures are actually Implementation details.¬†<a href="#fnref:user" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET