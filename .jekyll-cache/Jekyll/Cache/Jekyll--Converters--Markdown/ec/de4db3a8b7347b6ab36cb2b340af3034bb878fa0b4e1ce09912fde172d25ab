I"<ul>
  <li>REGEX</li>
  <li>Parsing</li>
  <li>Normalization</li>
</ul>

<h1 id="regex">REGEX</h1>
<h1 id="parsing-peg">Parsing, PEG</h1>
<h1 id="normalization">Normalization</h1>
<p>Opcodes are triples.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MOV R0,R1
</code></pre></div></div>

<p>Triples =&gt; normalization.</p>

<p>CPUs are horribly complex under-the-hood<sup id="fnref:rust" role="doc-noteref"><a href="#fn:rust" class="footnote">1</a></sup>.  Opcodes provide a normalized view of this complexity.</p>

<h1 id="see-also">See Also</h1>
<ul>
  <li>PEG</li>
  <li>Ohm-JS</li>
  <li><a href="https://www.youtube.com/watch?v=w_znRopGtbE">Jeri Homebrew NMOS Transistor</a></li>
</ul>

<p><a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a><br />
<a href="https://guitarvydas.github.io/2021/05/14/Table-Of-Contents.html">Table of Contents</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:rust" role="doc-endnote">
      <p>Transistors are built using oxides, e.g. various forms of rust.  Most programmers don’t care about what is inside those little black boxes we call ICs.  Triples provide the interface between physical rust and software. <a href="#fnref:rust" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET