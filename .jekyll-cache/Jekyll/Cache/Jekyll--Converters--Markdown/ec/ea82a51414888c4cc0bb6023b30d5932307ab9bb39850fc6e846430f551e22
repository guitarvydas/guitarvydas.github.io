I"<h1 id="takeaways">Takeaways</h1>
<ul>
  <li>abstractions for describing control flow</li>
</ul>

<h1 id="anti-takeaways">Anti-Takeaways</h1>
<p>Describing everything in a flat manner leads to complexity.</p>

<p><em>All-in-one</em> leads to accidental complexity. E.G. CPS is useful in Denotational Semantics, but is horrible for maintenance of ‚Äúnormal‚Äù applications that don‚Äôt need to create new kinds of control-flows.</p>

<h1 id="see-also">See Also</h1>
<ul>
  <li>Peter Lee ‚ÄúRealistic Compiler Generation‚Äù</li>
  <li>Cordy Orthogonal Code Generation (see condition descriptors for control-flow normalization).</li>
</ul>

<h1 id="see-also-1">See Also</h1>

<p><a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a><br />
<a href="https://guitarvydas.github.io/2021/05/14/Table-Of-Contents.html">Table of Contents</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

:ET