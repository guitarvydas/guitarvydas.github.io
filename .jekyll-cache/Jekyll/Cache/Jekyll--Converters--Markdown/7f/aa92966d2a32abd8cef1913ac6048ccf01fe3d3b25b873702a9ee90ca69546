I"X<p>When debugging a concurrent app - one with many possible paths of execution - one wants the equivalent of <em>tracer bullets</em> to see where messages have gone, and, come-from.</p>

<p>A single backtrace is not enough.</p>

<h2 id="implementation">Implementation</h2>

<p>Tracer bullets are straight-forward to implement in Common Lisp and JavaScript.</p>

<p>Tack the previous message onto the end of the current message (recursively, each message contains a trace of messages that caused them).</p>

<p>Iâ€™m experimenting with a <code class="language-plaintext highlighter-rouge">Message</code> class that has two main fields and two trace fields:</p>
<ol>
  <li>tag</li>
  <li>data</li>
  <li>come-from id</li>
  <li>previous message.</li>
</ol>

<p>Since each message is defined as above, <code class="language-plaintext highlighter-rouge">previous message</code> becomes a nested list from the beginning of time.</p>

<p>Currently, I output traces in Lisp syntax and use a Lisp pretty printer to view them (emacs <em>indent-region</em> in my case).</p>

<p>Fields (1) and (2) are <em>real</em>.  Fields (3) and (4) are for debugging.</p>

<h2 id="see-also">See Also</h2>

<p><a href="https://guitarvydas.github.io/2022/04/11/Message-Class.html">Message Class</a></p>

<p><a href="https://guitarvydas.github.io/2021/12/10/Table-of-Contents-Dec-01-2021.html">Table of Contents as of Dec. 01 2021</a><br />
<a href="https://guitarvydas.github.io">Blog</a><br />
<a href="https://www.youtube.com/channel/UC9EJr0nKHwadbHUtc5zHdmQ/videos">Videos</a><br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a><br />
<a href="https://leanpub.com/u/paul-tarvydas.html">Books</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous"> 
</script>

:ET