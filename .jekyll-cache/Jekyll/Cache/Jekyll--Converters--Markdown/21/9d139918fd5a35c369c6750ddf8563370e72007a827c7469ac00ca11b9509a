I"<h1 id="interpreters-vs-compilers">Interpreters vs. Compilers</h1>

<p><em>All</em> languages can be interpreted.</p>

<p>Only <em>some</em> languages can be compiled.</p>

<p>Compilation is an optimization, often applied prematurely.</p>

<h1 id="concurrency-asynchronocity">Concurrency, Asynchronocity</h1>

<p>Computers are asynchronous and concurrent.</p>

<p>Pogramming languages, to be useful in orchestrating the actions of computers, must:</p>

<ol>
  <li>express concurrency<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">1</a></sup></li>
  <li>then, apply tactics - such as dropping into the synchronous paradigm - to code.</li>
</ol>

<h1 id="see-also">See Also</h1>

<p><a href="https://guitarvydas.github.io">Blog</a><br />
<a href="https://guitarvydas.github.io/2021/09/21/Table-of-Contents-Sept-17-2021.html">Table of Contents</a><br />
<a href="https://www.youtube.com/channel/UC2bdO9l84VWGlRdeNy5">Videos</a><br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>Note that <em>thread libraries</em> relegate concurrency to second-class status. Most programming languages (such as Python, Bash, etc., etc.) relegate concurrency to second-class status.  A language is first-class concurrent if <em>every</em> operation is concurrent by default (function, statement, line of code, etc., etc.).  Special syntax is used only to drop into synchronous code.Â <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET