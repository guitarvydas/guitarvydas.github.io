I"«<p>Mathematics consists of 2 main parts:</p>
<ol>
  <li>the mechanics of manipulating symbols</li>
  <li>the hard-won knowledge of what works and what doesn‚Äôt (algorithms, laws, principles, etc.).</li>
</ol>

<p>Part 1 is simple text manipulation.</p>

<p>Mathematics was invented when the only tools were pen and paper.</p>

<p>The UNIX people <em>almost</em> got part 1 by producing a set of utilities for manipulating symbols in the form of text.</p>

<p>The ‚Äúproblem‚Äù with the UNIX notation was that text was only text up to end-of-line.</p>

<p>Newline is <em>special</em> in UNIX</p>

<p>Lisp <em>almost</em> got part 1, except that the symbols must be arranged as lists (CONS cells).</p>

<h1 id="new-math-manipulation">New Math Manipulation</h1>
<p>We need a way to manipulate symbols in a way that doesn‚Äôt make newlines and CONS cells special.</p>

<p>Computers like to think in terms of bytes.</p>

<h1 id="peg">PEG</h1>

<p>How can we manipulate raw bytes?</p>

<p>Parsers.</p>

<p>PEG parsing makes parsing easier.</p>

<p>PEG is a DSL for parsing.</p>

<p>Ohm-JS is improved PEG.</p>

<h1 id="diagrams">Diagrams</h1>
<p>Why stop at characters?</p>

<p>We can manipulate diagrams using computers.</p>

<p>How can we draw diagrams and then manipulate them?</p>

<p>A beginning might be:</p>
<ul>
  <li>draw.io</li>
  <li>SVG</li>
  <li>d2f.</li>
</ul>

<h1 id="see-also">See Also</h1>
<p><a href="https://guitarvydas.github.io/2022/01/14/D2F.html">d2f - Diagram to Text Converter</a><br />
<a href="https://www.npmjs.com/package/ohm-js">Ohm-JS</a> (see, also, my articles on PEG and Ohm-JS)<br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a><br />
<a href="https://guitarvydas.github.io/2021/12/10/Table-of-Contents-Dec-01-2021.html">Table of Contents</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

:ET