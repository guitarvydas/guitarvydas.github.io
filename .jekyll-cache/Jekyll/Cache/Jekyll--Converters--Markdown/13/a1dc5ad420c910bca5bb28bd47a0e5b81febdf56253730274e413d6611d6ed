I"Œ<p>The bare essence of successful component-based software is:</p>
<ol>
  <li>concurrency</li>
  <li>isolation.</li>
</ol>

<h1 id="concurrency">Concurrency</h1>

<p>Concurrency is often conflated with parallelism.</p>

<p>Concurrency is a paradigm.</p>

<p>Parallelism is just a problem-to-be-solved.</p>

<p>All parallel programs are concurrent.</p>

<p>Not all concurrent programs are parallel.</p>

<p>I found that <a href="https://www.youtube.com/watch?v=oV9rvDllKEg">Rob Pikeâ€™s talk</a> gave me words to describe this split (concurrency vs. parallelism).</p>

<h1 id="isolation">Isolation</h1>

<p>We want <a href="https://guitarvydas.github.io/2020/12/09/Isolation.html">isolation</a>.</p>

<h1 id="synchronous-language-plus-a-thread-library">Synchronous Language Plus a Thread Library</h1>

<p>A synchronous language plus a thread library is <em>not</em> the same as starting out with an asynchronous language.</p>

<p>The thought patterns are quite different.</p>

<p>I have never seen a successful drawing language which started out life synchronously, nor have I ever seen LEGO-like snap-together blocks done with synchronous thinking.  (APIâ€™s donâ€™t even come close).</p>

<h1 id="see-also">See Also</h1>

<p><a href="https://guitarvydas.github.io/2021/06/06/Isolation-II.html">Isolation II</a><br />
<a href="https://guitarvydas.github.io/2021/06/07/Isolation-III.html">Isolation III</a><br />
<a href="https://guitarvydas.github.io/2021/08/16/Isolation IV.html">Isolation IV</a><br />
<a href="https://guitarvydas.github.io/2021/07/06/Asynchronous-Thinking.html">Asynchronous Thinking</a></p>

<p><a href="https://guitarvydas.github.io">Blog</a><br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

:ET