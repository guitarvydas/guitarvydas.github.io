I"{<p>Programming consists of, at least, 2 aspects:</p>
<ol>
  <li>data design</li>
  <li>control flow design.</li>
</ol>

<p>A PL for data design should contain no provisions for control flow.</p>

<p>A PL for control flow design should contain no provisions for data design, i.e. such languages should be data-less.<sup id="fnref:ssl" role="doc-noteref"><a href="#fn:ssl" class="footnote">1</a></sup><sup id="fnref:handles" role="doc-noteref"><a href="#fn:handles" class="footnote">2</a></sup></p>

<h1 id="see-also">See Also</h1>

<p><a href="https://guitarvydas.github.io">Blog</a><br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:ssl" role="doc-endnote">
      <p>See S/SL in References, for an example of a dataless language. <a href="#fnref:ssl" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:handles" role="doc-endnote">
      <p>Handles to data have been used in various contexts. Handles allow moving data around, but do not allow definition of data structures. <a href="#fnref:handles" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET