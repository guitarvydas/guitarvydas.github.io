I"Y<p>Functional thinking leads us to the conclusion that names are meaningless.</p>

<p>I conclude that not only names, but that all syntax is meaningless.</p>

<p>Syntax is frivolous, paradigms are essential.</p>

<h2 id="toolbox-languages">Toolbox Languages</h2>
<p>Knowing that I can build any syntax in an afternoon makes me think differently about <em>what</em> I want in a language.</p>

<p>I want a toolbox of paradigms, not someone else’s syntax.</p>

<p>What makes a good toolbox language?</p>
<ol>
  <li>machine-readable and machine-writable anti-syntax, I eschew human-readability until the very last moment ; I want to write code that writes code for me</li>
  <li>snippets that are not tied to a single paradigm.</li>
</ol>

<p>I want an expression language of triples.</p>

<p>Assembler code consists of triples and allows many paradigms to be use.</p>

<p>What else comes to mind?</p>

<p>Lisp is a good first approximation.  Lisp is an expression language, has almost no syntax and allows many paradigms to be used.</p>

<p>The drawback of Lisp is that you are allowed to use functions that take more than 2 arguments.  Self-discipline is necessary.</p>

<p>Relational programming languages, like PROLOG, can be used, but,</p>
<ul>
  <li>relational programming languages tend to favour exactly one paradigm (relations)</li>
  <li>self-discipline is necessary to avoid facts (functors) that larger than triples</li>
  <li>relational programming makes simple things - like formatting a string for output - more difficult than it needs to be.</li>
</ul>

<p>Relational languages are most useful when you want to query a factbase of triples</p>

<h2 id="language-design-is-backwards">Language Design Is Backwards</h2>
<p>We continue to use mid-1900 biases when designing languages, e.g. we tend to build languages that are tied to grids of non-overlapping bitmaps.</p>

<p>Today, computers allow us to use something better than “characters” to express languages.</p>

<p>We can use Diagrams<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote">1</a></sup>.</p>

<p>We can use SVG.</p>

<h3 id="svg-to-save-the-day">SVG To Save The Day</h3>

<p>SVG is commonly used to create massive works of 2D art, yet, stripped-down SVG contains the few things we need to replace only-text-characters in programming languages, i.e.</p>
<ul>
  <li>rectangles</li>
  <li>ellipses</li>
  <li>lines</li>
  <li>text.</li>
</ul>

<h2 id="11th-rule">11th Rule<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">2</a></sup></h2>
<p>Programming languages are IDE wannabes.</p>

<h1 id="see-also">See Also</h1>

<p>(Brainstorming - I believe in brainstorming, the articles below are in that ilk).</p>

<p><a href="https://guitarvydas.github.io/2021/01/17/Factbases.html">Factbases (aka Triples)</a><br />
<a href="https://guitarvydas.github.io/2021/04/26/Factbases-101.html">Factbases 101</a><br />
<a href="https://guitarvydas.github.io/2021/03/16/Triples.html">Triples 2</a><br />
<a href="https://guitarvydas.github.io/2021/11/06/Triples-in-PROLOG.html">Triples in PROLOG</a></p>

<p><a href="https://guitarvydas.github.io/2021/04/28/Toolbox-Languages-(2).html">Toolbox Languages 2</a><br />
<a href="https://guitarvydas.github.io/2021/03/16/Toolbox-Languages.html">Toolbox Languages</a></p>

<p><a href="https://guitarvydas.github.io/2021/10/02/DaS-II.html">DaS II</a><br />
<a href="https://guitarvydas.github.io/2021/08/15/Diagrams-As-Syntax-Is-Not-Visual-Programming.html">Diagrams as Syntax Is Not Visual Programming</a><br />
<a href="https://guitarvydas.github.io/2021/11/24/On-Diagram-Notation.html">On Diagram Notation</a><br />
(See table of contents, “Diagrams” and “DaS”)</p>

<h1 id="see-also-1">See Also</h1>

<p><a href="https://guitarvydas.github.io/2021/12/10/Table-of-Contents-Dec-01-2021.html">Table of Contents</a><br />
<a href="https://guitarvydas.github.io">Blog</a><br />
<a href="https://www.youtube.com/channel/UC9EJr0nKHwadbHUtc5zHdmQ/videos">Videos</a><br />
<a href="https://guitarvydas.github.io/2021/01/14/References.html">References</a></p>

<script src="https://utteranc.es/client.js" repo="guitarvydas/guitarvydas.github.io" issue-term="pathname" theme="github-light" crossorigin="anonymous" async=""> 
</script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:2" role="doc-endnote">
      <p>Diagrams as Syntax -&gt; DaS. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:1" role="doc-endnote">
      <p>Apologies to Greenspun and his 10th Rule. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET