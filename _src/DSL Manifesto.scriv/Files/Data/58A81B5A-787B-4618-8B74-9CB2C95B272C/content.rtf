{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 We currently don't have a language for DI (Design Intent, aka Architecture, aka Business Rules).\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\i \cf0 Refactoring
\f0\i0  is a symptom of DI being embedded in code.  Corollary: if you need to refactor, then it is likely that the code hasn't been split into DI and Implementation.\
\
Excess detail is the antithesis of DI.  \
\
Most languages pride themselves on how many features they have, instead of how few features they have.  \
\
When you create DI, you don't want to care how something is implemented (e.g. Arrays vs. Lists).\
\
Low-level efficiency is the concern of Efficiency Engineers, not Architects.\
\
DSLs are one way to split DI from Implementation.\
}