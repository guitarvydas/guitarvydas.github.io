<?xml version="1.0" encoding="UTF-8"?>
<Comments>
    <Comment ID="FAB76D30-EC1F-4DEF-B25A-5F4788F652AA" Footnote="Yes" Color="0.949769 0.949769 0.949769"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs20 \cf0 Most HLL PLs started out life as DSLs built on top of full-featured substrate languages.  Greenspun\'92s 10
\fs14 \super th
\fs20 \nosupersub  rule is usually taken as a joke, but taken in the light of HLLs-as-DSLs, it begins to ring true.}]]></Comment>
    <Comment ID="FE525FBE-4084-4642-9DAA-AC50CCD0B1FC" Footnote="Yes" Color="0.949769 0.949769 0.949769"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs20 \cf0 OK, OK, I am simplifying.  There are some house-keeping functions that might be necessary.  We definitely don\'92t need RETURN and we don\'92t need CATCH/THROW.  Send() is sufficient.   RETURN?  Use Send() instead. CATCH/THROW?  Use Send() instead.  LOOP?  Get rid of it.  Recursion?  Get rid of it.  [Also, we don\'92t need dynamicism.  Dynamic programming is just another way to say \'93self modifying code\'94, which is even worse than using the word \'93GOTO\'94]. RETURN & CATCH/THROW & LOOP & Recursion make sense 
\i only 
\i0 on a synchronous island.  They are not atomic elements of the concurrent paradigm.}]]></Comment>
    <Comment ID="3BAB6F26-BE8E-42E2-9145-5AD55BAC49DD" Footnote="Yes" Color="0.949769 0.949769 0.949769"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs20 \cf0 Problems such as time-sharing, memory-sharing, protecting apps from one another, protecting against long-running apps, code-reuse, etc..  Most single apps don\'92t need these features / problems.  Note that mutual-multitasking is OK within a single app.  A \'93bug\'94 is just a \'93bug\'94 regardless of whether the concurrent paradigm or the synchronous paradigm is used.}]]></Comment>
</Comments>