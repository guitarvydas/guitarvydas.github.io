{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 A 
\f1\i schematic
\f0\i0  is a part that contains other parts (leaf and/or schematic parts).\
\
A schematic contains two more pieces of information than the generalized 
\f1\i part
\f0\i0  ancestor class:\
\
\pard\tx220\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}A list of part instances - its children.\
{\listtext	\uc0\u8226 	}A list of wires.  This is basically a routing table of messages between children.  See below.\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0
\cf0 \
Children cannot (must not) send messages directly to one another, but must route messages through their parent's routing table.\
\
This indirection is a fundamental principle of a component-based system that makes architectures flexible.  One cannot treat components as composable LEGO\'ae blocks if components can identify one another directly.  Direct calls are 
\f1\i verboten
\f0\i0  in the system that I {\field{\*\fldinst{HYPERLINK "scrivcmt://D9CD7628-1FB6-4BD5-AB76-D4E5F248E2D4"}}{\fldrslt describe}}\
\
The same 
\f2\fs24 <$Scr_Cs::0>
\f3\fs22 react()
\f2\fs24 <!$Scr_Cs::0>
\f0\fs26  function can be shared by all schematics.  The job of a schematic's react() function is to pull an event from its own input queue and deliver it to all of its (direct) children that are waiting for the {\field{\*\fldinst{HYPERLINK "scrivcmt://ABF89DD1-CBE8-4344-9C79-72FBA51E534E"}}{\fldrslt event}}.\
\
For an example of schematic parts, see 
\f2\fs24 <$Scr_Cs::0>
\f3\fs22 schematic.js
\f2\fs24 <!$Scr_Cs::0>
\f0\fs26  and how it is used in 
\f2\fs24 <$Scr_Cs::0>
\f3\fs22 example1.html
\f2\fs24 <!$Scr_Cs::0>
\f0\fs26 .}