{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 I discuss a very simple system composed of two visual components.\
\
I call this system Arrowgrams, or AG for short.\
\
The components communicate through messages via a third component - their common parent.\
\
As motivation, I provide the pseudo-html, and, I provide a diagram of the system.\
\
The two main components are shepherded by a top-level component.\
\
The two components can only communicate by using {\field{\*\fldinst{HYPERLINK "scrivcmt://D4299C65-DC58-4F98-952C-FDE9BAEA138C"}}{\fldrslt messages.}}\
\
The messages 
\f1\i cannot
\f0\i0  be sent directly from one component to another.  All message routing is performed by the parent, {\field{\*\fldinst{HYPERLINK "scrivcmt://D2E576BE-2796-4C1A-B739-13EAF2F968AA"}}{\fldrslt schematic}} component.  In this very simple example, that composite component is the top-level component.\
\
 The message delivery system is implemented by a 
\f1\i kernel
\f0\i0  of code, in this case written as a JavaScript script.  I show the details of a very straight-forward implementation of such a 
\f1\i kernel.
\f0\i0   I consider the implementation details to be a distraction and, hence, I leave them to the end of this {\field{\*\fldinst{HYPERLINK "scrivcmt://238E12B0-865C-4D17-AD4B-878AF94CA4E3"}}{\fldrslt document}}.\
\
I happen to use HTML + JavaScript.  This system can be implemented in any language.  In fact, I have implemented it in Common Lisp and various pre-cursors in C and assembler.}