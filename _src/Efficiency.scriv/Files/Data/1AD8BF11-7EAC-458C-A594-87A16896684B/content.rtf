{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab709
\pard\pardeftab709\sl276\slmult1\sa140\partightenfactor0

\f0\fs24 \cf0 What if we had an infinite number of knobs on the slider?  What if, say, pre-run-time were divided up into smaller and smaller pieces, each with its own distinct purpose?  The tenet of component-based design is to \'93do one thing, and do it well\'94 in each phase.  Could pre-run-time be broken down into method-lookup caching, branch-prediction, etc.?\
The front-end, compile-time, would have to create an intermediate form (IR \'96 internal representation) that was easily searched and re-arranged in a successive manner.  I think of {\field{\*\fldinst{HYPERLINK "scrivcmt://528BA8EA-F78D-4DC8-8DE2-5CD042E15404"}}{\fldrslt RTL}} and OCG (Orthogonal Code Generator, {\field{\*\fldinst{HYPERLINK "scrivcmt://68F48D2C-3A69-41F2-AD15-FB36E9C00980"}}{\fldrslt Cordy)}} technologies.  Data Descriptors ({\field{\*\fldinst{HYPERLINK "scrivcmt://B114D1D5-FC1B-48C2-80BE-3B3AAB471170"}}{\fldrslt Holt)}} show a way to represent data locations in a generalized manner.  FP (Functional Programming) leads to thinking about chains of filters.\
}