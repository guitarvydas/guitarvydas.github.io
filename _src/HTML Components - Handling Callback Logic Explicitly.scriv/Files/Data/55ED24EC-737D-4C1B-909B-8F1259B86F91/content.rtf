{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 The above implicitly shows how to structure event handlers - 
\f1\i make all events arrive at the same place
\f0\i0 .\
\
In fact, this is what 
\f1\i Structured Programming
\f0\i0  recommended.  1 entry point and 1 exit point.\
\
This allows us to view the full gamut of events together, in one piece of code.  This structure retains one's sanity and allows any state handling to occur in one place, instead of being spread out across many pieces of code.  This kind of funnel also benefits from being arranged in a hierarchical manner - viewing and trying to understand 7\'b12 events is about the maximum for any one person.  A flat space of anything is a poor choice - hierarchy is a better choice.\
}