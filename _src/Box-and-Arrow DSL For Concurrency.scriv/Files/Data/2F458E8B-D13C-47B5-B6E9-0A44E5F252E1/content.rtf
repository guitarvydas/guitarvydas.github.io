{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 In this essay, I discuss the design of a box-and-arrow diagram language {\field{\*\fldinst{HYPERLINK "scrivcmt://6C60FE29-38E6-4BC8-B749-DC4707CFB7AF"}}{\fldrslt (PSL)}} that describes a system of concurrent, isolated software components.  \
\
Software components are drawn as boxes and {\field{\*\fldinst{HYPERLINK "scrivcmt://B600127A-6346-4F36-8944-A99CF562BB11"}}{\fldrslt event-flows}} between the components are drawn as arrows.\
\
I treat the diagrams as a syntax for a PSL.\
\
The diagram language is based on a set of conventions.  N.B. programming languages are, also, based on conventions - you can't get them to compile just any English phrase.  The language manual tells you what phrases are acceptable.  Similarly, our diagram language manual (this essay) tells you what phrase are acceptable.\
\
The language in this essay uses ASCII + boxes + lines.  And, it allows these gratoms to {\field{\*\fldinst{HYPERLINK "scrivcmt://8996CC27-B5CC-4B03-9DCD-ED109179AA46"}}{\fldrslt overlap}}}