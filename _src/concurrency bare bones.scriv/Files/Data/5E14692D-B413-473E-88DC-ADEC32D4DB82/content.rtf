{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 In this essay, I describe the very bare bones for implementing concurrency in any language.\
\
I know that this can be implemented in JavaScript - I've done it and will blog about it in further essays.  Incidentally, I've also built preliminary versions of this in Common Lisp, C, C++ and assembler.  Variations of this technique have been put into production, in multiple projects)  \
\
Concurrency is very simple and its implementation should be "obvious".  You might wish to skip over the details, once you get the hang of it.\
\
Forget what you already know about multitasking and read on \'85\
\
[
\f1\i The point of this essay is to show only the basics of this technique.  I use hard-wired code for illustration.  If a more fully-developed version of the code is desired, see my essays about HTML Components - ag-js-1, ag-js-2, and ag-js-3
\f0\i0 ]}