{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 I invent the word "DaS" to mean Diagrams as Syntax.\
\
It is possible to parse diagrams in the same way that we now parse textual languages. \
\
The key ideas that I use are:\
\pard\tx220\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Use backtracking (for example PROLOG) to do the parsing - we can optimize this later.\
{\listtext	\uc0\u8226 	}Think of diagrams as 
\f1\i glyphs
\f0\i0 , not pixels.  For example, a box-and-arrow language contains only the 3 kinds of 
\f1\i glyphs
\f0\i0 :\
\pard\tx940\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\li1440\fi-1440\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	
\f2 \uc0\u8259 
\f0 	}boxes\
{\listtext	
\f2 \uc0\u8259 
\f0 	}arrows\
{\listtext	
\f2 \uc0\u8259 
\f0 	}text\
\pard\tx220\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Allow glyphs to overlap, instead of insisting that they be arranged on a fixed, non-overlapping grid as is done with current programming editors.\
{\listtext	\uc0\u8226 	}Mix text in with the diagrams.  \
{\listtext	\uc0\u8226 	}Some things are better expressed as text, e.g. 
\f1\i a = b + c
\f0\i0 . \
{\listtext	\uc0\u8226 	}Do not create diagrams to express things that we already know how to express.  \
{\listtext	\uc0\u8226 	}Use diagrams to express ideas that cannot be easily {\field{\*\fldinst{HYPERLINK "scrivcmt://220240C4-FD95-4F4C-9A0E-F8EA0C894D2B"}}{\fldrslt expressed}} in text, e.g. composition of concurrent components, e.g. components that have multiple results,  e.g. components that accept inputs at varying intervals of time, e.g. components that produce outputs at varying intervals of time.\
{\listtext	\uc0\u8226 	}Use the Concurrent paradigm.  DaS.  Note that box-and-arrow diagrams tend not to work unless the boxes are concurrent.  [Attempts at shoe-horning box-and-arrow diagrams into the sequential/synchronous paradigm cause difficulties and accidental complexities.]\
}