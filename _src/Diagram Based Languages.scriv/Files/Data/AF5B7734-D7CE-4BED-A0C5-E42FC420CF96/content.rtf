{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab709
\pard\pardeftab709\sl276\slmult1\sa140\partightenfactor0

\f0\fs24 \cf0 The canonical form of \'93visual programming\'94 - which I call DaS \'96 is the box-and-arrow diagram.  It is a network diagram wherein nodes are functions instead of full-blown computers.\
Most attempts at implementing box-and-arrow diagrams have failed (as far as I know).  Most attempts at \'93visual programming\'94 have failed (as far as I know \'96 visual programming can produce pretty pictures, but do not address PLs).\
I have been successfully using box-and-arrow diagrams in production since the mid-1990\'92s.  {\field{\*\fldinst{HYPERLINK "scrivcmt://A6F09F1D-A5CA-4769-B467-87EE681BAB36"}}{\fldrslt FBP}} has been using box-and-arrow diagrams since the 1960\'92s.  UNIX\'ae pipelines are a degenerate form of box-and-arrow-diagrams.\
Why have most attempts at box-and-arrow diagrams failed?\
\pard\pardeftab709\sl276\slmult1\sa140\partightenfactor0
{\field{\*\fldinst{HYPERLINK "scrivcmt://CE01BAFA-F0D7-4038-94BF-5A6D98F68B6A"}}{\fldrslt \cf0 Concurrency.}}\
Box-and-arrow diagrams do not work well in the sequential paradigm.\
All of the working instances of box-and-arrow diagrams \'96 that I know of \'96 treat boxes as being concurrent components and treat arrows as pipelines of concurrent messages between (concurrent) components.\
UNIX\'ae pipelines and existing implementations of FBP use heavy-weight 
\i threads
\i0  to implement concurrency.  I implemented the concurrent paradigm without using 
\i threads
\i0 .  I used something like closures.}