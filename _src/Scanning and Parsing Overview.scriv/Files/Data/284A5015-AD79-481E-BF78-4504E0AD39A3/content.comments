<?xml version="1.0" encoding="UTF-8"?>
<Comments>
    <Comment ID="9CD74F5B-89B1-4976-8C93-3B00DE7CFC55" Footnote="Yes" Color="0.949769 0.949769 0.949769"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs20 \cf0 In fact, characters 
\f1\i are
\f0\i0  glyphs.  Characters are small pixmaps.  The glyphs are bound to certain keys and/or certain input gestures, e.g. multiple keys pressed at the same time, mouse movement and buttons, etc.  It is possible to imagine a wider set of glyphs, e.g. boxes and lines, that are not constrained to a fixed bitmap size.  Historically, most programming languages are based on rigid, non-overlapping grids of character glyphs.  This is due to the limitations of early hardware, keyboards, memory and processors.  Newer hardware can display overlapping glyphs, but these advances are not widely used for programming language design, yet.}]]></Comment>
</Comments>