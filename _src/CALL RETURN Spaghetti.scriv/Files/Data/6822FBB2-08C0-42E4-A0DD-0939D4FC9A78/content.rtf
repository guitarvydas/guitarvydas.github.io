{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Shared memory is not an issue.\
\
Components cannot share memory.\
\
Components can only send immutable messages.\
\
In very tightly coupled systems, we have the temptation to send pointers to large blobs of memory.  The sender might mutate the blobs of memory before the message is read by the receiver.  \
\
This system makes no guarantees for such situations.\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0
\cf0 \ul \ulc0 This\ulnone  {\field{\*\fldinst{HYPERLINK "scrivcmt://99A62004-970C-4C1C-AECE-07DE2AA72ADD"}}{\fldrslt system}} gives the Architect all of the atomic tools necessary to create systems that work.  For example, the memory-sharing issue was encountered 40+ years ago in TTL-based hardware systems.  The solution was to use "double-buffering" and "overrun" flags.  If a system could not switch between buffers quickly enough, then it created an overrun condition.  A system which encountered overrun was deemed simply to be "too slow".  \
\
The Architect must make the {\field{\*\fldinst{HYPERLINK "scrivcmt://655DB053-CB99-49FD-93FB-39932F0A298A"}}{\fldrslt calculation}} of whether his/her design is "fast enough" for a given purpose.}