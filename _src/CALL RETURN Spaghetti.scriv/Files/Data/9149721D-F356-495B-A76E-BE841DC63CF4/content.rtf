{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 It turns out that Looping (and Recursion) is the \ul exception\ulnone , not the rule.\
\
Components must not enter long-running loops (or deep recursion).  Components must 
\f1\i yield
\f0\i0  to the Dispatcher.  Note that compilers could insert 
\f1\i yields
\f0\i0  at the bottom of Loops to accomplish this behaviour.\
\
The Dispatcher routine is the only routine in the system that runs a loop.  It loops through a list of 
\f1\i ready
\f0\i0  closures and, randomly, invokes a 
\f1\i ready 
\f0\i0 closure.  When the 
\f1\i closure
\f0\i0  {\field{\*\fldinst{HYPERLINK "scrivcmt://79BBE8C6-CDCA-4397-BC62-862F51CC47D7"}}{\fldrslt finishes}}, the Dispatcher simply picks another 
\f1\i ready
\f0\i0  closure to run.}