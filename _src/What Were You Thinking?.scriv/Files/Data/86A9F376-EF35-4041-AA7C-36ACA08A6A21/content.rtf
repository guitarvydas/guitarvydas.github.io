{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 A network of computers forms an autonomous set of islands of general computers.\
\
Each computer on a network is, usually, a general computer, capable of running calculator apps and controller apps.\
\
The network itself, is more like a controller app, though.  The network performs operations at "random" times, in a non-sequential manner.\
\
At present there are many programming languages for building calculators - like Python, JavaScript, C, Rust, etc. - but few popular languages for building networks.\
\
The most common language for building networks of computers is called HTML.  It's operations are very "low level" and do tend to describe the actions that a single node in the network might invoke.\
\
Another very common language for network coordination is Bash.\
\
Networking is so ubiquitous, that many of the calculator-building languages come with "libraries" of low-level network operations.  As far as I know, there is no popular language for building and coordinating something like a full autonomous system of computers - a language that defines and runs the whole network instead of single nodes on the network.  At present, a computer network is programmed like a bunch of independent consciousnesses, arguing with one another.  People who build robots have to "fake it" using fancy libraries called "RTOS"s and at least one calculator language.}