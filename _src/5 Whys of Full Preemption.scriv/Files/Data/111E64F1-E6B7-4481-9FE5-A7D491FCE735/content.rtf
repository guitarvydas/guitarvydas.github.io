{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Q1: Why are multitasking libraries and operating systems difficult to use?\
\
A: Because they use full preemption.\
\
Q2: Why do multitasking libraries and operating systems use full preemption?\
\
A: That is how multiple threads can be 
\f1\i simulated
\f0\i0  on a single processor.\
\
Q3: Why do we simulate multiple threads on a single processor?\
\
A: Processors are expensive, so we can only afford to use one processor.\
\
Q4: Why are processors expensive?\
\
A: Processors used to be expensive, but they are inexpensive now.\
\
Q5: Why don't we use multiple processors, one for each thread?\
 \
A: Because that is the way we always did it, starting with when processors were expensive.\
\
Conclusion: Use multiple processors.  Stop trying to simulate multiple threads on a single processor.  If you do simulate multiple threads on a single processor, don't simulate scenarios, like memory sharing, that cannot be done using multiple processors (that just invites accidental complexity).\
}