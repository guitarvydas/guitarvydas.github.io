{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Ohm-JS documentation emphasizes the fact that grammars are "clean" and semantics have been moved out of the {\field{\*\fldinst{HYPERLINK "scrivcmt://20EA25A7-54F0-41F6-9F49-06514F0A8064"}}{\fldrslt grammar}}.\
\
This makes sense for 
\f1\i readability
\f0\i0 .  The grammar and semantics have been created and checked by the compiler.   A Maintenance Engineer can 
\f1\i read
\f0\i0  the grammar and then refer to the semantics object.\
\
This separation of semantics from grammar, though, makes 
\f1\i writing 
\f0\i0 more difficult, since one needs to refer to the grammar when writing semantic rules.  For example, I have broken CondExpression into many parts.  I have to ping-pong between the grammar and the semantics object to ensure that I have correctly named each semantic rule and to make sure that the arities of semantic rules match the grammar.  I just changed the grammar to split Cond into more pieces - now, I find it difficult to ensure that the semantics object corresponds to the tweaked {\field{\*\fldinst{HYPERLINK "scrivcmt://154784EE-92DA-4AE5-858E-6BCCD15226A5"}}{\fldrslt grammar.}}\
\
Ideally, I should be able to choose whether I view grammar rules and the semantics rules in one eye-full, or, whether the grammar should be clean, with semantics rules moved elsewhere.\
\
At least, the ohm-js compiler performs arity checks and raises error conditions if there is a mismatch between grammar and semantic rules.\
\
Can {\field{\*\fldinst{HYPERLINK "scrivcmt://7937BD30-F9D2-4ED7-B06D-BDFD3476A6FA"}}{\fldrslt this}} be significantly improved?\
}