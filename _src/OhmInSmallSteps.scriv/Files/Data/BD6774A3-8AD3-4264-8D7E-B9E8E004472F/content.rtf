{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\froman\fcharset0 Palatino-Roman;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs22   Code := ChunkF ChunkA ChunkB\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!$Scr_Ps::0>
\f2\fs26 Use the := operator instead of = (and +=).\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs22 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!$Scr_Ps::0>
\f2\fs26 overridetest.js:\
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs22 fff\
aaa\
bbb\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!$Scr_Ps::0>
\f2\fs26 \
override.ohm:\
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs22 Program \{\
  Code = ChunkA ChunkB\
  ChunkA = "aaa" Eol*\
  ChunkB = "bbb" Eol*\
  Eol = "\\n"\
\}\
\
Program2 <: Program \{\
  Code := ChunkF ChunkA ChunkB\
  ChunkF = "fff" Eol*\
\}\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!$Scr_Ps::0>
\f2\fs26 \
override.js:\
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs22 // usage:\
// npm install ohm-js\
// node inherit.js\
\
\
const fs = require ('fs')\
const ohm = require ('ohm-js')\
const grammarData = fs.readFileSync('override.ohm')\
const grammarsNamespace = ohm.grammars(grammarData)\
\
const input = fs.readFileSync('overridetest.js')\
\
const result = grammarsNamespace.Program2.match(input)\
// console.log(result)\
// console.log(grammarsNamespace.Program2.trace(input).toString())\
\
if (result.succeeded()) \{\
    console.log("Matching Succeeded")\
\} else \{\
    console.log("Matching Failed")\
\}\

\f0\fs24 <!$Scr_Ps::0>}