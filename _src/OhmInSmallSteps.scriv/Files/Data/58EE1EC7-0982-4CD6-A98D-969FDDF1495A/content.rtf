{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 I've written a grammar where Program2 inherits from Program.\
\
Both grammars are in the same {\field{\*\fldinst{HYPERLINK "scrivcmt://09C5477D-4E9E-4FF1-85CC-3DFA83F3F016"}}{\fldrslt file}}.\
\
I use the += operator to extend the rule "Code" in the second grammar Program2.\
\
N.B. I need to call ohm.grammars(\'85) not ohm.grammar(\'85) when there is more than one grammar in the file.  This call returns a namespace instead of a grammar object.\
\
N.B. The default start rule remains "Code" (inherited from the original grammar).  I deal with the start rule later.\
\
inherittest.js:\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 \
eee\
aaa\
bbb\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 inherit.ohm:\
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 Program \{\
  Code = ChunkA ChunkB -- code\
  ChunkA = "aaa" Eol*\
  ChunkB = "bbb" Eol*\
  Eol = "\\n"\
\}\
\
Program2 <: Program \{\
  Main = ChunkE\
  Code += ChunkE ChunkA ChunkB  -- code3\
  ChunkE = "eee" Eol*\
\}\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <!$Scr_Ps::0>
\f0\fs26 \
inherit.js:\
\
\pard\tx720\tx1080\tx1440\tx1800\tx2160\li720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 <$Scr_Ps::0>
\f2\fs22 // usage:\
// npm install ohm-js\
// node inherit.js\
\
\
const fs = require ('fs')\
const ohm = require ('ohm-js')\
const grammarData = fs.readFileSync('inherit.ohm')\
const grammarsNamespace = ohm.grammars(grammarData)\
\
const input = fs.readFileSync('inherittest.js')\
\
const result = grammarsNamespace.Program2.match(input)\
// console.log(result)\
// console.log(grammarsNamespace.Program2.trace(input).toString())\
\
if (result.succeeded()) \{\
    console.log("Matching Succeeded")\
\} else \{\
    console.log("Matching Failed")\
\}\
// const semantics = grammar.createSemantics()\
\

\f1\fs24 <!$Scr_Ps::0>}