<?xml version="1.0" encoding="UTF-8"?>
<Comments>
    <Comment ID="55B45895-8C12-4052-9982-CAC48E390602" Author="Paul Tarvydas" Footnote="Yes" Color="0.949769 0.949769 0.949769"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The stack is an optimized Collection.  A stack is an Array allocated in "inexpensive" reusable, memory.  An Array is a Collection with most of the housekeeping details optimized away.  A Stack is an Array is a Collection with items stored in contiguous locations.  Early computer architectures, e.g. some IBM 360s, did not have hardware-supported stacks, and used special instructions, e.g. BALR, to create linked lists of optimized islands of memory.  The idea of 
\f1\i scoping
\f0\i0  was conflated with 
\f1\i memory and CPU optimization
\f0\i0  as was common in early forms of computing.}]]></Comment>
    <Comment ID="5FF6D2FD-00FA-4FFC-B443-8AA0717A902A" Author="Paul Tarvydas" Footnote="Yes" Color="0.949769 0.949769 0.949769"><![CDATA[{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 A form of accidental complexity.}]]></Comment>
</Comments>